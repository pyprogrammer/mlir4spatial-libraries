package models

import mlir_libraries.ConversionImplicits._
import mlir_libraries.types
import mlir_libraries.CommonConstructs._
import tensorflow_lattice.{tf, tfl}
import spatial.libdsl._

object d3l3r3c32_ {
  def apply[T:Num](arg0_0: types.Readable2D[T], arg0_1: types.Readable2D[T], arg0_2: types.Readable2D[T], arg0_3: types.Readable2D[T], arg0_4: types.Readable2D[T], arg0_5: types.Readable2D[T], arg0_6: types.Readable2D[T], arg0_7: types.Readable2D[T], arg0_8: types.Readable2D[T])(implicit state: argon.State): (types.Readable2D[T]) = {
    val (v0) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.010000e+02, 2.390000e+02, 4.070000e+02, 6.160000e+02, 8.600000e+02, 1.235000e+03, 1.789000e+03, 2.269000e+03, 2.637000e+03, 3.209000e+03, 3.890000e+03, 4.366000e+03, 5.010000e+03, 5.469000e+03, 6.285000e+03, 7.418000e+03, 8.445000e+03, 9.248000e+03, 1.013400e+04, 1.155000e+04, 1.281300e+04, 1.390400e+04, 1.584400e+04, 1.801800e+04, 2.198700e+04, 2.619100e+04, 3.051800e+04, 3.632300e+04, 3.850900e+04, 4.061300e+04, 4.290800e+04), pwl_calibration_kernel = Array(Array(8.203039e-01, 3.238977e-01, 9.997982e-01), Array(1.796961e-01, 6.761023e-01, -4.316702e-01), Array(0.000000e+00, 0.000000e+00, -4.181372e-01), Array(0.000000e+00, 0.000000e+00, -1.499908e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(arg0_0)
    val (v1) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(9.999936e-01, 2.054911e-05, 0.000000e+00), Array(3.861424e-04, 1.000000e+00, 1.000000e+00), Array(0.000000e+00, 2.612384e-01, 0.000000e+00), Array(2.889932e-01, 8.221087e-01, 3.319979e-01)))(arg0_1)
    val (v2) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(1.000000e+00, 1.000000e+00, 1.000000e+00), Array(1.000000e+00, 1.000000e+00, 9.951944e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(4.851277e-01, 0.000000e+00, 0.000000e+00), Array(9.238859e-01, 8.981647e-01, 3.321293e-02), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(1.280510e-01, 2.540561e-02, 0.000000e+00), Array(9.996220e-01, 9.995376e-01, 1.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 1.041776e-05, 5.392666e-01), Array(1.000000e+00, 8.499510e-02, 2.919677e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(9.290452e-01, 9.229417e-01, 1.404517e-01), Array(7.646580e-01, 0.000000e+00, 3.168492e-01), Array(7.979836e-01, 8.300939e-01, 5.809404e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(3.582794e-01, 2.013192e-01, 1.753582e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(8.415004e-01, 8.146116e-01, 9.978911e-01), Array(0.000000e+00, 4.770723e-01, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 4.418892e-01, 4.729396e-02), Array(3.558412e-04, 1.255865e-02, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(9.998773e-01, 9.997450e-01, 1.000000e+00), Array(2.390604e-02, 8.669382e-03, 7.893134e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(9.554620e-01, 9.105023e-01, 1.324098e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(8.608995e-01, 1.000000e+00, 1.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(4.275583e-04, 7.030503e-03, 3.002471e-01), Array(9.650602e-01, 6.634129e-01, 9.649587e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(1.986683e-04, 2.690534e-01, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(1.620837e-01, 3.443921e-01, 7.548473e-01), Array(1.000000e+00, 6.040853e-01, 7.091681e-01), Array(5.584133e-01, 5.127560e-01, 5.050109e-01), Array(8.966818e-01, 6.581387e-01, 2.587273e-01), Array(1.000000e+00, 1.000000e+00, 1.000000e+00), Array(6.828209e-01, 8.054973e-01, 9.227494e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(5.400239e-01, 7.169222e-01, 2.605941e-01)))(arg0_2)
    val (v3) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(7.980945e-01, 5.124558e-01, 8.352817e-01), Array(6.278130e-01, 2.293402e-01, 7.604997e-05), Array(7.818203e-02, 4.597586e-01, 4.380174e-02), Array(0.000000e+00, 0.000000e+00, 9.981451e-01), Array(2.375985e-02, 3.054987e-01, 9.835088e-01), Array(9.277058e-05, 4.870943e-05, 8.841130e-01), Array(1.000000e+00, 1.000000e+00, 2.743236e-01), Array(8.471529e-01, 8.846452e-01, 3.914030e-01), Array(8.675185e-01, 8.483267e-01, 6.577484e-01), Array(9.894923e-01, 1.000000e+00, 1.000000e+00), Array(0.000000e+00, 0.000000e+00, 1.000000e+00), Array(4.301499e-01, 7.706711e-01, 1.326566e-01)))(arg0_3)
    val (v4) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.110000e+02, 2.180000e+02, 3.260000e+02, 4.370000e+02, 5.620000e+02, 6.730000e+02, 7.810000e+02, 8.890000e+02, 9.970000e+02, 1.104000e+03, 1.212000e+03, 1.320000e+03, 1.429000e+03, 1.536000e+03, 1.651000e+03, 1.772000e+03, 1.898000e+03, 2.038000e+03, 2.194000e+03, 2.362000e+03, 2.555000e+03, 2.750000e+03, 2.996000e+03, 3.366000e+03, 4.095000e+03, 6.274000e+03, 1.098600e+04, 1.198100e+04, 1.643800e+04, 6.570000e+04, 1.379964e+09), pwl_calibration_kernel = Array(Array(1.192874e-01, 1.368130e-01, 2.280134e-01), Array(7.110628e-01, 8.355609e-01, 7.193071e-01), Array(-2.727221e-01, -2.952107e-01, 4.358095e-02), Array(-2.322767e-01, -6.310871e-01, 8.189082e-03), Array(4.841037e-01, -4.547472e-02, -3.650188e-04), Array(1.887329e-01, 3.199415e-03, -3.501773e-04), Array(-1.236677e-03, 1.757866e-03, -3.330112e-04), Array(-1.714242e-02, -2.743919e-03, -7.719153e-02), Array(-1.821548e-02, -1.457874e-03, -1.678562e-01), Array(-1.863056e-02, 1.477101e-05, -3.595669e-01), Array(-2.445138e-02, 1.109624e-04, -2.915037e-01), Array(-5.504930e-02, 3.454774e-04, -9.298954e-02), Array(-9.076118e-03, 7.321910e-03, -4.003877e-04), Array(1.337534e-02, 3.053446e-02, 2.294456e-03), Array(-9.558260e-03, 3.093110e-02, 2.302858e-03), Array(-5.185127e-02, 3.726306e-02, -9.282846e-04), Array(-6.663382e-02, 2.608227e-01, 2.239065e-03), Array(2.512538e-02, 5.765592e-01, 5.949884e-02), Array(-4.149252e-02, 5.062073e-02, 3.544958e-02), Array(-6.254947e-02, 3.356338e-04, 2.390544e-02), Array(-7.413030e-02, 3.368855e-04, 2.104332e-02), Array(-1.184225e-03, 2.871752e-04, 4.417723e-02), Array(1.021349e-02, 2.542138e-04, 5.109982e-02), Array(4.633605e-03, 2.416372e-04, 5.876707e-02), Array(-1.327467e-02, 2.439618e-04, 5.489063e-02), Array(-6.302476e-02, 1.724958e-04, 5.454129e-02), Array(-2.412170e-01, 1.050830e-04, 1.218251e-01), Array(1.639448e-01, -2.157688e-04, -4.079345e-01), Array(1.881221e-02, -2.686381e-04, -8.703233e-02), Array(-3.266774e-01, -2.536178e-04, -3.061411e-02), Array(-1.388972e-01, -4.501343e-04, -1.189908e-02), Array(0.000000e+00, 5.412102e-05, -3.110730e-04)))(arg0_4)
    val (v5) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.160000e+02, 6.190000e+02, 9.200000e+02, 1.228000e+03, 1.533000e+03, 1.849000e+03, 2.165000e+03, 2.499000e+03, 2.849000e+03, 3.243000e+03, 3.632000e+03, 4.073000e+03, 4.559000e+03, 5.122000e+03, 5.653000e+03, 6.230000e+03, 6.891000e+03, 7.635000e+03, 8.466000e+03, 9.275000e+03, 1.013400e+04, 1.107300e+04, 1.221200e+04, 1.363400e+04, 1.538700e+04, 1.783400e+04, 2.107700e+04, 2.581400e+04, 3.398800e+04, 5.627500e+04, 1.309937e+09), pwl_calibration_kernel = Array(Array(7.031095e-01, 2.305214e-01, 1.825933e-01), Array(2.968905e-01, 5.984440e-01, 8.152122e-01), Array(0.000000e+00, -6.496370e-02, 2.168834e-03), Array(0.000000e+00, -3.992462e-02, 2.563000e-05), Array(0.000000e+00, -1.883637e-01, 0.000000e+00), Array(0.000000e+00, -1.764488e-01, 0.000000e+00), Array(0.000000e+00, -2.210013e-01, 0.000000e+00), Array(0.000000e+00, -1.370904e-01, 0.000000e+00), Array(0.000000e+00, 4.002963e-04, 0.000000e+00), Array(0.000000e+00, 6.050508e-01, 0.000000e+00), Array(0.000000e+00, 2.420461e-01, 0.000000e+00), Array(0.000000e+00, 3.171557e-02, 0.000000e+00), Array(0.000000e+00, 1.605088e-02, 0.000000e+00), Array(0.000000e+00, -6.710207e-02, 0.000000e+00), Array(0.000000e+00, -1.976268e-01, 0.000000e+00), Array(0.000000e+00, -3.609529e-01, 0.000000e+00), Array(0.000000e+00, -2.335124e-01, 0.000000e+00), Array(0.000000e+00, -1.399739e-02, 0.000000e+00), Array(0.000000e+00, 8.406918e-04, 0.000000e+00), Array(0.000000e+00, 1.364814e-03, 0.000000e+00), Array(0.000000e+00, 7.186305e-03, 0.000000e+00), Array(0.000000e+00, 4.012606e-02, 0.000000e+00), Array(0.000000e+00, 2.966835e-01, 0.000000e+00), Array(0.000000e+00, 1.859392e-01, 0.000000e+00), Array(0.000000e+00, 2.269532e-01, 0.000000e+00), Array(0.000000e+00, 1.087972e-01, 0.000000e+00), Array(0.000000e+00, -1.497114e-02, 0.000000e+00), Array(0.000000e+00, -7.926583e-02, 0.000000e+00), Array(0.000000e+00, -8.708787e-02, 0.000000e+00), Array(0.000000e+00, 9.176534e-02, 0.000000e+00), Array(0.000000e+00, -3.089774e-02, 0.000000e+00), Array(0.000000e+00, -6.543452e-01, 0.000000e+00)))(arg0_5)
    val (v6) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(1.000000e+00, 9.998389e-01, 7.306093e-05), Array(1.796711e-01, 6.235123e-01, 3.299139e-01), Array(2.888151e-01, 4.917456e-01, 3.028491e-01)))(arg0_6)
    val (v7) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.000000e+00, 3.000000e+00), pwl_calibration_kernel = Array(Array(7.060755e-01, 1.000000e+00, 9.996968e-01), Array(-7.060755e-01, 0.000000e+00, -9.996968e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(arg0_7)
    val (v8) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.000000e+00, 2.000000e+00, 3.000000e+00), pwl_calibration_kernel = Array(Array(5.957059e-01, 6.291432e-01, 3.418171e-01), Array(-1.331757e-01, 3.220390e-01, -1.458801e-01), Array(3.581081e-01, 5.088510e-03, 6.320682e-01), Array(1.395526e-01, -1.363314e-01, 1.655712e-01)))(arg0_8)
    val (v9) = tf.Stack(axis = 2)(v0, v1, v2, v3, v4, v5, v6, v7, v8)
    val (v10) = tfl.Lattice(lattice_kernel = Array(Array(2.833066e-06, 3.261282e-02, 0.000000e+00), Array(2.721773e-06, 1.420832e-01, 0.000000e+00), Array(2.957741e-06, 1.582711e-01, 9.225555e-03), Array(2.727928e-06, 2.664608e-01, 5.715305e-03), Array(1.075249e-04, 1.467699e-07, 6.679771e-02), Array(1.030644e-04, 2.483385e-07, 1.770698e-01), Array(1.101615e-04, 7.546062e-05, 1.729849e-01), Array(1.052657e-04, 7.970263e-05, 2.878951e-01), Array(3.453668e-06, 1.396563e-01, 0.000000e+00), Array(3.234980e-06, 2.491579e-01, 0.000000e+00), Array(3.440624e-06, 2.690373e-01, 1.209679e-02), Array(3.711724e-02, 3.774262e-01, 8.146662e-03), Array(6.968839e-05, 4.392509e-08, 2.043172e-01), Array(6.711580e-05, 4.411120e-02, 3.149383e-01), Array(7.347013e-05, 6.082714e-05, 3.142071e-01), Array(7.058811e-05, 6.867373e-05, 4.279506e-01), Array(1.298686e-06, 1.346207e-01, 0.000000e+00), Array(5.485082e-02, 2.446095e-01, 0.000000e+00), Array(2.628240e-02, 2.676122e-01, 1.400998e-01), Array(1.265866e-01, 3.764356e-01, 1.289991e-01), Array(0.000000e+00, 3.254562e-04, 1.805888e-01), Array(0.000000e+00, 4.679441e-02, 2.903504e-01), Array(0.000000e+00, 3.708920e-01, 3.052905e-01), Array(0.000000e+00, 4.015085e-01, 4.207545e-01), Array(5.411920e-02, 2.431578e-01, 0.000000e+00), Array(1.317119e-01, 3.533452e-01, 0.000000e+00), Array(1.033008e-01, 3.758529e-01, 9.994529e-01), Array(2.067956e-01, 4.844684e-01, 9.996854e-01), Array(0.000000e+00, 8.585596e-02, 3.311744e-01), Array(0.000000e+00, 2.063311e-01, 4.411959e-01), Array(0.000000e+00, 2.889129e-01, 4.704117e-01), Array(0.000000e+00, 4.055709e-01, 5.870097e-01), Array(4.526915e-02, 1.176391e-01, 0.000000e+00), Array(1.081239e-01, 2.283522e-01, 0.000000e+00), Array(1.283048e-01, 0.000000e+00, 5.518308e-03), Array(1.975873e-01, 0.000000e+00, 3.717811e-03), Array(7.226721e-05, 0.000000e+00, 1.612954e-01), Array(6.925358e-05, 0.000000e+00, 2.700362e-01), Array(1.038868e-03, 0.000000e+00, 2.709847e-01), Array(9.945924e-04, 0.000000e+00, 3.871722e-01), Array(1.395647e-01, 2.293306e-01, 0.000000e+00), Array(1.928713e-01, 3.403271e-01, 0.000000e+00), Array(2.156795e-01, 8.273296e-02, 4.701667e-02), Array(2.797265e-01, 1.555406e-01, 3.618030e-02), Array(0.000000e+00, 0.000000e+00, 3.070526e-01), Array(0.000000e+00, 7.070190e-02, 4.165238e-01), Array(3.091285e-04, 0.000000e+00, 4.242438e-01), Array(3.002353e-04, 0.000000e+00, 5.394309e-01), Array(2.432738e-01, 2.297284e-01, 0.000000e+00), Array(3.454403e-01, 3.406685e-01, 0.000000e+00), Array(4.281494e-01, 7.526426e-01, 2.440594e-01), Array(5.695959e-01, 9.060355e-01, 2.232746e-01), Array(1.075018e-02, 3.461367e-01, 2.812686e-01), Array(1.033141e-02, 4.895050e-01, 3.900192e-01), Array(9.889543e-01, 9.996177e-01, 4.278171e-01), Array(9.999650e-01, 9.996139e-01, 5.441184e-01), Array(3.715902e-01, 3.416118e-01, 0.000000e+00), Array(4.809444e-01, 4.527477e-01, 0.000000e+00), Array(5.882370e-01, 7.549114e-01, 1.000000e+00), Array(7.311454e-01, 9.108840e-01, 1.000000e+00), Array(5.985758e-01, 6.108615e-01, 4.398162e-01), Array(6.996073e-01, 7.487330e-01, 5.491149e-01), Array(9.764643e-01, 9.997739e-01, 6.127051e-01), Array(9.834685e-01, 9.997715e-01, 7.298594e-01), Array(8.616615e-02, 1.426406e-01, 1.411038e-01), Array(1.927602e-01, 2.526481e-01, 2.313170e-01), Array(1.942966e-01, 2.825572e-01, 2.401562e-01), Array(3.007975e-01, 3.896088e-01, 3.688063e-01), Array(1.698681e-03, 6.949869e-02, 2.291831e-01), Array(1.781690e-03, 1.594696e-01, 3.409530e-01), Array(1.464531e-03, 1.224757e-01, 3.566552e-01), Array(1.554469e-03, 2.176241e-01, 4.721603e-01), Array(2.094370e-01, 2.492077e-01, 4.903310e-01), Array(3.176991e-01, 3.592891e-01, 5.912221e-01), Array(3.201806e-01, 3.891285e-01, 9.989876e-01), Array(4.277469e-01, 4.968402e-01, 1.000000e+00), Array(3.170312e-04, 1.657955e-01, 3.460691e-01), Array(3.056385e-04, 2.653376e-01, 4.571860e-01), Array(3.113964e-04, 2.356574e-01, 4.807252e-01), Array(2.995607e-04, 3.309343e-01, 5.989820e-01), Array(2.377228e-01, 2.425235e-01, 6.089332e-01), Array(3.494798e-01, 3.529264e-01, 7.311392e-01), Array(3.532270e-01, 3.840384e-01, 1.000000e+00), Array(4.657947e-01, 4.923013e-01, 1.000000e+00), Array(1.027402e-01, 1.735741e-01, 3.478706e-01), Array(1.719449e-01, 2.725222e-01, 4.603097e-01), Array(1.274351e-01, 3.734928e-01, 5.116892e-01), Array(2.346752e-01, 4.776736e-01, 6.346404e-01), Array(3.415888e-01, 3.512172e-01, 8.324193e-01), Array(4.548569e-01, 4.617949e-01, 9.616883e-01), Array(4.593911e-01, 4.908566e-01, 9.999704e-01), Array(5.743525e-01, 5.995623e-01, 9.999833e-01), Array(6.230251e-01, 3.165540e-01, 4.637823e-01), Array(7.426263e-01, 4.160275e-01, 5.759556e-01), Array(7.510833e-01, 4.584177e-01, 6.209489e-01), Array(8.712101e-01, 5.529231e-01, 7.411034e-01), Array(2.661011e-01, 2.278470e-01, 4.275167e-03), Array(4.102874e-01, 3.389747e-01, 7.820787e-02), Array(4.998564e-01, 3.719893e-01, 1.521729e-01), Array(6.827711e-01, 4.876783e-01, 2.740256e-01), Array(9.819086e-01, 2.700229e-01, 3.376347e-01), Array(9.826466e-01, 3.720431e-01, 4.492956e-01), Array(9.827660e-01, 5.458380e-01, 4.366129e-01), Array(9.835461e-01, 6.197832e-01, 5.442178e-01), Array(3.694533e-01, 3.398021e-01, 4.699941e-01), Array(4.966574e-01, 4.509943e-01, 5.626673e-01), Array(5.383586e-01, 4.842475e-01, 9.986098e-01), Array(6.767090e-01, 6.008301e-01, 9.991726e-01), Array(4.698942e-01, 4.026594e-01, 4.561947e-01), Array(5.790879e-01, 5.107886e-01, 5.679721e-01), Array(5.426160e-01, 7.696313e-01, 5.905957e-01), Array(6.524200e-01, 8.379242e-01, 7.047349e-01), Array(3.887354e-01, 3.399111e-01, 6.584528e-01), Array(5.175599e-01, 4.510581e-01, 6.892738e-01), Array(5.539991e-01, 5.715415e-01, 9.999123e-01), Array(6.942008e-01, 7.018524e-01, 9.999287e-01), Array(1.000000e+00, 4.836947e-01, 4.632617e-01), Array(1.000000e+00, 5.833235e-01, 5.777705e-01), Array(1.000000e+00, 9.998882e-01, 6.495473e-01), Array(1.000000e+00, 9.998842e-01, 7.681618e-01), Array(5.670059e-01, 4.525884e-01, 9.224312e-01), Array(7.143016e-01, 5.637759e-01, 9.147947e-01), Array(7.668199e-01, 6.296896e-01, 1.000000e+00), Array(9.075963e-01, 7.508554e-01, 1.000000e+00), Array(9.997469e-01, 7.119675e-01, 5.798286e-01), Array(9.997582e-01, 8.289670e-01, 6.947667e-01), Array(9.997528e-01, 1.000000e+00, 7.541236e-01), Array(9.997646e-01, 1.000000e+00, 8.722484e-01), Array(9.524748e-02, 1.586157e-01, 1.773338e-02), Array(2.024721e-01, 2.671194e-01, 1.151997e-02), Array(2.083207e-01, 2.404923e-02, 1.563009e-01), Array(3.137638e-01, 1.271732e-01, 1.497688e-01), Array(0.000000e+00, 1.323741e-03, 1.780329e-01), Array(0.000000e+00, 1.447953e-03, 2.919634e-01), Array(0.000000e+00, 4.371216e-04, 2.741579e-01), Array(0.000000e+00, 4.410106e-04, 3.784550e-01), Array(2.100624e-01, 2.674405e-01, 1.656112e-02), Array(3.177230e-01, 3.760515e-01, 1.265314e-02), Array(3.232808e-01, 1.418224e-01, 2.573037e-01), Array(4.282750e-01, 2.438566e-01, 2.609520e-01), Array(0.000000e+00, 9.206484e-04, 2.941202e-01), Array(0.000000e+00, 8.898993e-02, 4.077198e-01), Array(0.000000e+00, 4.315608e-04, 4.117191e-01), Array(2.171861e-02, 4.353445e-04, 5.198530e-01), Array(2.561165e-01, 2.658725e-01, 6.595099e-03), Array(3.716939e-01, 3.747510e-01, 4.106914e-03), Array(3.798990e-01, 1.433816e-01, 1.392598e-01), Array(4.938771e-01, 2.444308e-01, 1.333938e-01), Array(1.067727e-01, 3.554253e-04, 3.280171e-01), Array(1.524181e-01, 8.161620e-02, 4.400778e-01), Array(2.425944e-01, 2.920229e-04, 4.271743e-01), Array(3.820764e-01, 2.947432e-04, 5.324554e-01), Array(3.747344e-01, 3.740228e-01, 4.571014e-01), Array(4.889861e-01, 4.828489e-01, 5.750851e-01), Array(4.921986e-01, 2.636524e-01, 2.942716e-01), Array(6.066715e-01, 3.604865e-01, 4.256095e-01), Array(4.221549e-01, 1.180905e-01, 4.540499e-01), Array(5.720411e-01, 2.364169e-01, 5.646030e-01), Array(6.777892e-01, 0.000000e+00, 5.421495e-01), Array(8.213311e-01, 0.000000e+00, 6.535289e-01), Array(1.908649e-01, 2.297691e-01, 0.000000e+00), Array(2.864912e-01, 3.411781e-01, 0.000000e+00), Array(2.706535e-01, 2.360640e-02, 0.000000e+00), Array(3.513956e-01, 1.124044e-01, 0.000000e+00), Array(0.000000e+00, 1.462757e-01, 2.688740e-01), Array(0.000000e+00, 2.306848e-01, 3.814481e-01), Array(0.000000e+00, 0.000000e+00, 2.908905e-01), Array(0.000000e+00, 0.000000e+00, 4.179216e-01), Array(3.012640e-01, 3.415913e-01, 0.000000e+00), Array(3.937286e-01, 4.528485e-01, 0.000000e+00), Array(3.718876e-01, 7.095883e-01, 0.000000e+00), Array(4.484234e-01, 8.281937e-01, 0.000000e+00), Array(0.000000e+00, 6.378541e-01, 3.735987e-01), Array(0.000000e+00, 7.665709e-01, 4.862674e-01), Array(0.000000e+00, 9.238448e-01, 4.160870e-01), Array(0.000000e+00, 9.997125e-01, 5.381110e-01), Array(3.704190e-01, 3.416379e-01, 0.000000e+00), Array(4.903148e-01, 4.528160e-01, 0.000000e+00), Array(5.176995e-01, 7.142890e-01, 0.000000e+00), Array(6.570432e-01, 8.090956e-01, 0.000000e+00), Array(6.060648e-01, 6.435380e-01, 3.772659e-01), Array(5.982736e-01, 7.640445e-01, 4.915645e-01), Array(7.135698e-01, 1.000000e+00, 4.329590e-01), Array(8.078748e-01, 9.999714e-01, 5.517794e-01), Array(5.048352e-01, 4.530404e-01, 5.269014e-01), Array(6.308846e-01, 5.641981e-01, 6.735914e-01), Array(6.678243e-01, 7.273272e-01, 4.061539e-01), Array(8.182542e-01, 8.146168e-01, 5.560568e-01), Array(9.127780e-01, 7.753713e-01, 5.654744e-01), Array(1.000000e+00, 8.835905e-01, 6.768669e-01), Array(1.000000e+00, 9.998792e-01, 5.836008e-01), Array(1.000000e+00, 9.998173e-01, 7.151945e-01), Array(2.379247e-01, 2.757113e-01, 3.723862e-01), Array(3.484372e-01, 3.847028e-01, 4.965942e-01), Array(3.516333e-01, 3.705395e-01, 8.682359e-01), Array(4.585024e-01, 4.788348e-01, 1.000000e+00), Array(1.641767e-01, 1.117728e-01, 2.663158e-01), Array(2.913235e-01, 1.943125e-01, 3.808660e-01), Array(2.615520e-01, 2.328314e-04, 3.968494e-01), Array(3.908016e-01, 2.348432e-04, 5.096342e-01), Array(3.588796e-01, 3.842689e-01, 2.722583e-01), Array(4.705107e-01, 4.933745e-01, 3.938128e-01), Array(4.741701e-01, 4.806741e-01, 7.778440e-01), Array(5.820494e-01, 5.886475e-01, 9.196564e-01), Array(3.702640e-01, 2.483182e-01, 3.899589e-01), Array(4.854878e-01, 3.316346e-01, 5.045113e-01), Array(4.590003e-01, 2.357855e-04, 5.290905e-01), Array(5.729569e-01, 8.718161e-02, 6.489696e-01), Array(3.662015e-01, 3.808332e-01, 3.996587e-01), Array(4.811922e-01, 4.902171e-01, 5.036014e-01), Array(4.862041e-01, 4.795578e-01, 6.808632e-01), Array(5.989873e-01, 5.875399e-01, 7.735791e-01), Array(6.149161e-01, 2.768684e-01, 4.454937e-01), Array(6.930978e-01, 3.632410e-01, 5.575048e-01), Array(7.182440e-01, 5.325890e-02, 5.785031e-01), Array(7.894018e-01, 1.731155e-01, 6.916804e-01), Array(4.871521e-01, 4.889772e-01, 6.587801e-01), Array(6.019662e-01, 5.984032e-01, 7.819114e-01), Array(6.062561e-01, 5.880195e-01, 1.000000e+00), Array(7.211004e-01, 6.952860e-01, 1.000000e+00), Array(8.228595e-01, 4.165185e-01, 5.650820e-01), Array(8.746150e-01, 5.028670e-01, 6.769598e-01), Array(8.451983e-01, 1.493372e-02, 7.249446e-01), Array(8.101500e-01, 1.302362e-01, 8.402050e-01), Array(3.489955e-01, 3.419538e-01, 6.907228e-02), Array(4.722106e-01, 4.529156e-01, 2.079038e-01), Array(5.004876e-01, 5.376149e-01, 0.000000e+00), Array(6.526662e-01, 6.337597e-01, 0.000000e+00), Array(9.999754e-01, 8.093978e-01, 3.877891e-01), Array(9.999763e-01, 8.945589e-01, 4.995959e-01), Array(9.999758e-01, 8.694621e-01, 3.033538e-01), Array(9.999769e-01, 8.662013e-01, 4.316491e-01), Array(4.807735e-01, 4.539683e-01, 2.521976e-01), Array(6.113737e-01, 5.646702e-01, 3.771790e-01), Array(6.483779e-01, 7.624577e-01, 6.898620e-01), Array(8.146252e-01, 8.621084e-01, 8.374001e-01), Array(9.999737e-01, 8.629903e-01, 4.985113e-01), Array(9.999747e-01, 9.705162e-01, 6.116623e-01), Array(9.999741e-01, 9.725001e-01, 5.707821e-01), Array(9.999752e-01, 9.720085e-01, 6.843163e-01), Array(4.650804e-01, 4.533299e-01, 1.157574e-01), Array(5.765840e-01, 5.642217e-01, 2.047494e-01), Array(5.722261e-01, 7.047418e-01, 2.072694e-04), Array(6.712487e-01, 8.139662e-01, 2.035029e-04), Array(1.017555e-02, 8.620434e-01, 5.258067e-01), Array(8.586911e-03, 9.667706e-01, 6.384085e-01), Array(2.128304e-01, 9.541069e-01, 5.019634e-01), Array(2.149654e-01, 9.483534e-01, 6.177667e-01), Array(5.920023e-01, 5.648587e-01, 9.149763e-01), Array(7.008631e-01, 6.757420e-01, 1.000000e+00), Array(6.950492e-01, 9.999410e-01, 1.000000e+00), Array(7.898619e-01, 9.999284e-01, 1.000000e+00), Array(3.741472e-03, 1.000000e+00, 6.783921e-01), Array(2.763113e-03, 1.000000e+00, 7.924225e-01), Array(1.979827e-01, 9.998673e-01, 8.735949e-01), Array(2.003009e-01, 9.998655e-01, 9.721567e-01), Array(4.161217e-06, 1.378334e-01, 0.000000e+00), Array(3.861329e-06, 2.475334e-01, 0.000000e+00), Array(4.072229e-06, 2.683293e-01, 2.893297e-03), Array(1.596923e-02, 3.765457e-01, 2.581379e-03), Array(1.720936e-04, 8.171649e-08, 1.479010e-01), Array(1.660992e-04, 2.143394e-02, 2.581358e-01), Array(1.752935e-04, 8.003144e-05, 2.293164e-01), Array(1.688516e-04, 8.756104e-05, 3.511306e-01), Array(4.733560e-06, 2.449062e-01, 0.000000e+00), Array(3.909963e-02, 3.547054e-01, 0.000000e+00), Array(3.227867e-02, 3.769628e-01, 3.019515e-03), Array(1.367123e-01, 4.852331e-01, 2.669849e-03), Array(1.854585e-03, 3.527804e-02, 3.068630e-01), Array(3.476714e-03, 1.588007e-01, 4.163893e-01), Array(2.095138e-03, 4.248386e-04, 4.165396e-01), Array(3.752916e-03, 5.020489e-04, 5.329099e-01), Array(6.296439e-02, 2.397763e-01, 0.000000e+00), Array(1.439058e-01, 3.500649e-01, 0.000000e+00), Array(1.208148e-01, 3.739120e-01, 3.675786e-02), Array(2.251072e-01, 4.826232e-01, 3.575251e-02), Array(0.000000e+00, 3.813536e-02, 2.705372e-01), Array(0.000000e+00, 1.614940e-01, 3.796389e-01), Array(0.000000e+00, 3.122285e-01, 4.078322e-01), Array(0.000000e+00, 3.844559e-01, 5.258438e-01), Array(1.443631e-01, 3.491008e-01, 0.000000e+00), Array(2.287991e-01, 4.596044e-01, 0.000000e+00), Array(2.063651e-01, 4.818567e-01, 9.792661e-01), Array(3.134204e-01, 5.905638e-01, 9.806479e-01), Array(8.490514e-05, 2.012267e-01, 4.358209e-01), Array(4.011222e-02, 3.208284e-01, 5.443435e-01), Array(9.192810e-03, 3.614759e-01, 6.237820e-01), Array(1.446470e-01, 5.820905e-01, 7.416542e-01), Array(1.228992e-01, 2.272494e-01, 0.000000e+00), Array(1.752127e-01, 3.383130e-01, 0.000000e+00), Array(2.134394e-01, 4.212036e-02, 3.748254e-03), Array(2.819998e-01, 1.151541e-01, 3.583980e-03), Array(0.000000e+00, 0.000000e+00, 8.364218e-02), Array(0.000000e+00, 0.000000e+00, 2.297873e-01), Array(3.869269e-04, 0.000000e+00, 1.886760e-01), Array(3.741523e-04, 0.000000e+00, 3.253141e-01), Array(1.900616e-01, 3.395424e-01, 0.000000e+00), Array(2.309480e-01, 4.507050e-01, 0.000000e+00), Array(2.644447e-01, 2.953072e-01, 5.666982e-03), Array(3.267698e-01, 3.717473e-01, 5.414729e-03), Array(0.000000e+00, 1.368800e-01, 3.641011e-01), Array(0.000000e+00, 2.427577e-01, 4.842254e-01), Array(3.179421e-04, 0.000000e+00, 4.670435e-01), Array(3.218226e-04, 0.000000e+00, 5.951509e-01), Array(3.450646e-01, 3.400022e-01, 0.000000e+00), Array(4.394827e-01, 4.511317e-01, 0.000000e+00), Array(5.437620e-01, 7.337093e-01, 0.000000e+00), Array(6.829452e-01, 8.854019e-01, 0.000000e+00), Array(1.442979e-01, 3.787768e-01, 2.489327e-01), Array(2.632962e-01, 5.161936e-01, 3.870692e-01), Array(9.999149e-01, 9.996188e-01, 4.385603e-01), Array(9.999183e-01, 9.996147e-01, 5.749155e-01), Array(4.093645e-01, 4.526166e-01, 0.000000e+00), Array(4.916151e-01, 5.637983e-01, 0.000000e+00), Array(5.447019e-01, 7.481836e-01, 9.387187e-01), Array(6.486768e-01, 8.933532e-01, 9.405749e-01), Array(4.853216e-01, 6.738707e-01, 5.093074e-01), Array(5.697592e-01, 8.047255e-01, 6.256607e-01), Array(7.774332e-01, 9.997801e-01, 8.230566e-01), Array(7.792631e-01, 9.997778e-01, 9.485189e-01), Array(1.924462e-01, 2.466580e-01, 6.467514e-04), Array(2.988692e-01, 3.568558e-01, 5.760877e-02), Array(3.004673e-01, 3.869848e-01, 1.925291e-02), Array(4.068847e-01, 4.948796e-01, 1.728024e-01), Array(1.555419e-02, 1.350906e-01, 3.445296e-01), Array(1.525068e-02, 2.383925e-01, 4.575587e-01), Array(1.481979e-02, 2.833235e-01, 4.494701e-01), Array(1.450819e-02, 3.932216e-01, 5.669882e-01), Array(3.177673e-01, 3.534764e-01, 3.416333e-01), Array(4.256828e-01, 4.637847e-01, 4.421194e-01), Array(4.280882e-01, 4.932434e-01, 4.591556e-01), Array(5.353447e-01, 6.016082e-01, 5.979370e-01), Array(4.843714e-04, 2.510509e-01, 4.605115e-01), Array(4.696989e-04, 3.549833e-01, 5.728835e-01), Array(4.774237e-04, 4.713489e-01, 5.999642e-01), Array(4.622907e-04, 5.656433e-01, 7.180495e-01), Array(3.486928e-01, 3.475343e-01, 3.956312e-01), Array(4.609958e-01, 4.581386e-01, 5.188063e-01), Array(4.650446e-01, 4.871473e-01, 1.000000e+00), Array(5.778788e-01, 5.960203e-01, 1.000000e+00), Array(2.316292e-01, 2.554465e-01, 4.590094e-01), Array(3.374887e-01, 3.594100e-01, 5.723621e-01), Array(2.921511e-01, 5.098338e-01, 6.641912e-01), Array(4.007075e-01, 6.221756e-01, 7.848578e-01), Array(4.554650e-01, 4.570487e-01, 7.403368e-01), Array(5.694033e-01, 5.678390e-01, 8.431271e-01), Array(5.741989e-01, 5.943093e-01, 9.995735e-01), Array(6.893718e-01, 7.034602e-01, 9.996400e-01), Array(9.999996e-01, 4.185264e-01, 5.732577e-01), Array(9.999997e-01, 5.204226e-01, 6.861668e-01), Array(9.999996e-01, 7.286150e-01, 7.342837e-01), Array(9.999997e-01, 7.936397e-01, 8.511833e-01), Array(3.597649e-01, 3.381350e-01, 0.000000e+00), Array(4.935938e-01, 4.493481e-01, 0.000000e+00), Array(5.609761e-01, 4.811703e-01, 0.000000e+00), Array(7.201262e-01, 5.959830e-01, 2.391843e-02), Array(9.443232e-01, 3.523451e-01, 4.529017e-01), Array(9.462607e-01, 4.565564e-01, 5.651988e-01), Array(9.460996e-01, 6.702557e-01, 4.057923e-01), Array(9.481220e-01, 7.462856e-01, 5.356593e-01), Array(4.470558e-01, 4.503401e-01, 1.819634e-01), Array(5.588268e-01, 5.615765e-01, 3.011977e-01), Array(5.737916e-01, 5.876748e-01, 4.019678e-01), Array(6.900579e-01, 7.017155e-01, 4.573572e-01), Array(3.473986e-01, 5.056298e-01, 5.729080e-01), Array(4.587059e-01, 6.137313e-01, 6.861601e-01), Array(4.249277e-01, 9.255944e-01, 6.667600e-01), Array(5.372701e-01, 9.996603e-01, 7.876737e-01), Array(4.873012e-01, 4.505607e-01, 5.665357e-01), Array(6.035116e-01, 5.617685e-01, 5.458389e-01), Array(6.152132e-01, 6.342120e-01, 9.998276e-01), Array(7.335234e-01, 7.568812e-01, 9.998319e-01), Array(8.291628e-01, 5.661632e-01, 5.760748e-01), Array(8.256080e-01, 6.646875e-01, 6.912051e-01), Array(8.298844e-01, 9.998928e-01, 9.479852e-01), Array(8.262311e-01, 9.998895e-01, 9.997932e-01), Array(6.655889e-01, 5.635997e-01, 7.931328e-01), Array(7.973819e-01, 6.748152e-01, 7.620207e-01), Array(8.218606e-01, 7.126834e-01, 9.998931e-01), Array(9.456884e-01, 8.280285e-01, 9.998958e-01), Array(9.930450e-01, 8.114238e-01, 6.916018e-01), Array(9.931310e-01, 9.270056e-01, 8.075666e-01), Array(9.917301e-01, 1.000000e+00, 9.313787e-01), Array(9.917542e-01, 1.000000e+00, 9.999380e-01), Array(2.041630e-01, 2.670015e-01, 1.046991e-02), Array(3.107001e-01, 3.756749e-01, 9.574028e-03), Array(3.156691e-01, 1.370477e-01, 1.111607e-02), Array(4.196037e-01, 2.399958e-01, 1.077578e-02), Array(0.000000e+00, 1.772219e-03, 2.904001e-01), Array(0.000000e+00, 7.330788e-02, 4.042409e-01), Array(0.000000e+00, 2.691189e-02, 3.110411e-01), Array(0.000000e+00, 2.714055e-02, 4.217238e-01), Array(3.197290e-01, 3.751873e-01, 2.417878e-02), Array(4.263597e-01, 4.838500e-01, 2.307355e-02), Array(4.307194e-01, 2.632872e-01, 8.325606e-02), Array(5.334988e-01, 3.643812e-01, 7.923510e-02), Array(0.000000e+00, 1.088876e-01, 4.062195e-01), Array(3.253655e-02, 2.415020e-01, 5.198172e-01), Array(5.470114e-02, 8.730377e-02, 4.954738e-01), Array(1.613675e-01, 8.844079e-02, 6.088758e-01), Array(3.706459e-01, 3.728148e-01, 2.140698e-03), Array(4.860297e-01, 4.817750e-01, 7.504363e-02), Array(4.942516e-01, 2.661702e-01, 3.120305e-03), Array(6.075898e-01, 3.656041e-01, 3.021535e-03), Array(2.444483e-01, 9.446210e-02, 4.406591e-01), Array(4.089069e-01, 2.238772e-01, 5.526528e-01), Array(5.388714e-01, 1.345588e-02, 4.486425e-01), Array(6.947285e-01, 1.348129e-02, 5.574505e-01), Array(4.886002e-01, 4.811200e-01, 5.651384e-01), Array(6.030080e-01, 5.900437e-01, 6.954163e-01), Array(6.066221e-01, 4.108512e-01, 4.887118e-01), Array(7.210265e-01, 5.051768e-01, 6.230988e-01), Array(8.508081e-01, 2.690698e-01, 5.642657e-01), Array(1.000000e+00, 3.953995e-01, 6.750876e-01), Array(1.000000e+00, 3.807485e-02, 6.154810e-01), Array(1.000000e+00, 3.845620e-02, 7.317722e-01), Array(2.831349e-01, 3.406973e-01, 1.538589e-01), Array(3.702885e-01, 4.520085e-01, 2.163521e-01), Array(3.452920e-01, 2.725723e-01, 3.311810e-01), Array(4.183559e-01, 3.417397e-01, 3.205139e-01), Array(0.000000e+00, 2.101453e-01, 3.808171e-01), Array(0.000000e+00, 3.038513e-01, 4.934577e-01), Array(0.000000e+00, 0.000000e+00, 4.332904e-01), Array(0.000000e+00, 0.000000e+00, 5.446808e-01), Array(3.863313e-01, 4.525148e-01, 5.188097e-02), Array(4.692266e-01, 5.637493e-01, 5.807383e-02), Array(4.391624e-01, 7.045576e-01, 3.925048e-01), Array(5.119904e-01, 8.097739e-01, 3.786487e-01), Array(0.000000e+00, 6.184872e-01, 4.834405e-01), Array(0.000000e+00, 7.323321e-01, 5.958574e-01), Array(1.726093e-02, 8.192571e-01, 5.350229e-01), Array(1.253666e-01, 9.111193e-01, 6.458652e-01), Array(4.955240e-01, 4.526311e-01, 6.378759e-07), Array(6.230602e-01, 5.638077e-01, 9.176260e-02), Array(6.615393e-01, 6.420397e-01, 0.000000e+00), Array(8.142903e-01, 6.835592e-01, 0.000000e+00), Array(6.996832e-01, 6.690312e-01, 4.889138e-01), Array(7.964150e-01, 7.458608e-01, 6.034469e-01), Array(1.000000e+00, 1.000000e+00, 5.401323e-01), Array(1.000000e+00, 8.826836e-01, 6.539636e-01), Array(6.383192e-01, 5.641483e-01, 8.132519e-01), Array(7.755838e-01, 6.753181e-01, 9.560345e-01), Array(8.268436e-01, 5.282752e-01, 9.476037e-01), Array(9.911336e-01, 5.970204e-01, 9.807726e-01), Array(1.000000e+00, 7.401594e-01, 6.765771e-01), Array(1.000000e+00, 8.214196e-01, 7.889096e-01), Array(1.000000e+00, 6.565390e-01, 7.492996e-01), Array(1.000000e+00, 6.110142e-01, 8.680689e-01), Array(3.478038e-01, 3.828992e-01, 7.206182e-01), Array(4.571250e-01, 4.920844e-01, 8.583591e-01), Array(4.597106e-01, 4.805133e-01, 9.999022e-01), Array(5.654248e-01, 5.886385e-01, 9.999045e-01), Array(3.221132e-01, 2.455010e-01, 3.707839e-01), Array(4.538549e-01, 3.409345e-01, 4.864703e-01), Array(4.289238e-01, 2.121251e-01, 4.950617e-01), Array(5.523465e-01, 3.507808e-01, 6.173182e-01), Array(4.702986e-01, 4.908360e-01, 4.288247e-01), Array(5.808071e-01, 6.000620e-01, 5.488316e-01), Array(5.837531e-01, 5.914635e-01, 5.507731e-01), Array(6.902735e-01, 6.990177e-01, 6.809582e-01), Array(5.487741e-01, 3.711298e-01, 4.936578e-01), Array(6.618842e-01, 4.684951e-01, 6.096574e-01), Array(6.413350e-01, 5.617280e-01, 5.435213e-01), Array(7.495947e-01, 6.968265e-01, 6.702799e-01), Array(4.818856e-01, 4.863952e-01, 6.436871e-01), Array(5.967932e-01, 5.959329e-01, 7.517148e-01), Array(6.018509e-01, 5.900301e-01, 7.785875e-01), Array(7.143846e-01, 6.975722e-01, 8.858785e-01), Array(8.330408e-01, 3.833873e-01, 5.581321e-01), Array(8.769873e-01, 4.838026e-01, 6.713299e-01), Array(8.676867e-01, 6.059336e-01, 6.433052e-01), Array(8.467988e-01, 7.508571e-01, 7.652416e-01), Array(6.011861e-01, 5.944527e-01, 6.987833e-01), Array(7.160363e-01, 7.040284e-01, 8.293801e-01), Array(7.204516e-01, 7.014170e-01, 6.694137e-01), Array(8.351983e-01, 8.074795e-01, 7.802296e-01), Array(9.294404e-01, 5.375312e-01, 6.756852e-01), Array(9.182082e-01, 6.339959e-01, 7.884858e-01), Array(9.081112e-01, 9.223247e-01, 7.310744e-01), Array(9.016976e-01, 9.209674e-01, 8.623734e-01), Array(4.718256e-01, 4.523286e-01, 6.776216e-01), Array(6.042506e-01, 5.634750e-01, 8.136492e-01), Array(6.456164e-01, 5.869017e-01, 9.997559e-01), Array(8.178294e-01, 6.784780e-01, 9.997659e-01), Array(9.999717e-01, 8.800970e-01, 4.958062e-01), Array(9.999728e-01, 9.355458e-01, 6.087939e-01), Array(9.999722e-01, 6.268206e-01, 3.704800e-01), Array(9.999732e-01, 6.076068e-01, 4.867985e-01), Array(6.136503e-01, 5.641712e-01, 2.055622e-01), Array(7.581459e-01, 6.752134e-01, 3.296120e-01), Array(8.126585e-01, 8.017915e-01, 8.444121e-02), Array(1.000000e+00, 9.010326e-01, 2.166087e-01), Array(9.999700e-01, 9.364330e-01, 6.052826e-01), Array(9.999711e-01, 9.781447e-01, 7.190251e-01), Array(9.999705e-01, 9.426069e-01, 4.569189e-01), Array(9.999715e-01, 9.418010e-01, 5.783668e-01), Array(5.779405e-01, 5.639094e-01, 3.416397e-01), Array(6.872393e-01, 6.750062e-01, 4.302014e-01), Array(6.786553e-01, 5.969627e-01, 1.323617e-01), Array(7.697546e-01, 6.910965e-01, 2.278665e-01), Array(0.000000e+00, 8.573173e-01, 6.357736e-01), Array(0.000000e+00, 8.908687e-01, 7.492126e-01), Array(1.798692e-01, 5.501910e-01, 5.099313e-01), Array(1.822408e-01, 5.340737e-01, 6.276337e-01), Array(7.002870e-01, 6.756181e-01, 8.282405e-01), Array(8.046690e-01, 7.866818e-01, 9.574668e-01), Array(7.926602e-01, 8.710296e-01, 8.249399e-01), Array(8.769657e-01, 9.842502e-01, 8.284016e-01), Array(0.000000e+00, 9.984316e-01, 7.908911e-01), Array(0.000000e+00, 9.989438e-01, 9.067953e-01), Array(1.665891e-01, 9.866151e-01, 7.118148e-01), Array(1.691414e-01, 9.875315e-01, 7.881114e-01)), shape = Array(2, 2, 2, 2, 2, 2, 2, 2, 2), tp = "hypercube", units = 3)(v9)
    val (v11) = tf.Transpose(axes = Array(1, 0))(v10)
    val (v12) = tf.GatherV2(axis = 0, indices = Array(0))(v11)
    val (v13) = tf.GatherV2(axis = 0, indices = Array(1))(v11)
    val (v14) = tf.GatherV2(axis = 0, indices = Array(2))(v11)
    val (v15) = tf.Transpose(axes = Array(1, 0))(v12)
    val (v16) = tf.Transpose(axes = Array(1, 0))(v13)
    val (v17) = tf.Transpose(axes = Array(1, 0))(v14)
    val (v18) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(1.685168e-02, 1.686926e-02, 1.695032e-02), Array(2.524310e-02, 2.530418e-02, 2.538806e-02), Array(4.644777e-02, 4.656152e-02, 4.664706e-02), Array(4.902320e-02, 4.920506e-02, 4.932190e-02), Array(3.756467e-02, 3.764254e-02, 3.775023e-02), Array(1.808184e-02, 1.814553e-02, 1.827653e-02), Array(2.206481e-02, 2.215248e-02, 2.228662e-02), Array(6.435342e-02, 6.450534e-02, 6.464353e-02), Array(6.521964e-02, 6.537449e-02, 6.551072e-02), Array(1.254393e-01, 1.256431e-01, 1.257779e-01), Array(1.115085e-01, 1.117104e-01, 1.118442e-01), Array(-9.046063e-02, -9.023130e-02, -9.010229e-02), Array(-3.847048e-02, -3.812110e-02, -3.795889e-02), Array(-1.369808e-01, -1.366505e-01, -1.364981e-01), Array(1.222546e-01, 1.224025e-01, 1.224544e-01), Array(2.017081e-01, 2.018506e-01, 2.018810e-01), Array(4.271859e-02, 4.285103e-02, 4.285818e-02), Array(-3.811210e-02, -3.796214e-02, -3.795689e-02), Array(9.310746e-02, 9.335017e-02, 9.336621e-02), Array(-3.032428e-02, -3.027469e-02, -3.030223e-02), Array(2.823347e-02, 2.830333e-02, 2.827948e-02), Array(2.606426e-01, 2.581823e-01, 2.564735e-01), Array(3.279507e-03, 2.605081e-03, 2.680361e-03), Array(6.060600e-04, 5.807877e-04, 4.280806e-04), Array(-3.902912e-04, -3.862381e-04, -2.184510e-04), Array(-7.571578e-04, -7.628202e-04, -7.549524e-04), Array(-7.638335e-04, -7.768869e-04, -7.607341e-04), Array(-9.263754e-04, -9.411573e-04, -9.217262e-04), Array(-1.271307e-03, -1.149178e-03, -1.310766e-03), Array(-2.380967e-03, -2.377450e-03, -2.376914e-03), Array(1.865149e-03, 2.007365e-03, 1.737535e-03), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v15)
    val (v19) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(4.067400e-04, 3.962200e-04, 3.957200e-04), Array(3.644344e-02, 3.553848e-02, 3.545070e-02), Array(9.555107e-02, 9.507535e-02, 9.502749e-02), Array(9.471026e-02, 9.428352e-02, 9.424859e-02), Array(-1.113766e-02, -1.172061e-02, -1.176704e-02), Array(7.872340e-02, 7.822590e-02, 7.817809e-02), Array(5.788523e-02, 5.738348e-02, 5.733493e-02), Array(7.183644e-02, 7.135305e-02, 7.130170e-02), Array(5.032328e-02, 4.983091e-02, 4.977050e-02), Array(5.565408e-02, 5.522424e-02, 5.518392e-02), Array(1.777911e-02, 1.718360e-02, 1.710904e-02), Array(9.823185e-02, 9.772748e-02, 9.764802e-02), Array(8.706689e-02, 8.674103e-02, 8.665693e-02), Array(5.230218e-02, 5.198377e-02, 5.189341e-02), Array(-3.900397e-02, -3.937382e-02, -3.946948e-02), Array(-8.055365e-02, -8.096004e-02, -8.107477e-02), Array(-1.440364e-02, -1.482666e-02, -1.494259e-02), Array(8.790910e-03, 8.314970e-03, 8.198560e-03), Array(1.251640e-03, 7.743800e-04, 6.550600e-04), Array(8.691370e-03, 8.215310e-03, 8.097830e-03), Array(-2.222480e-03, -2.699320e-03, -2.821860e-03), Array(-2.946544e-02, -2.995187e-02, -3.008717e-02), Array(-4.978780e-03, -5.398630e-03, -5.513730e-03), Array(1.023113e-01, 1.018477e-01, 1.017562e-01), Array(3.496623e-02, 3.465807e-02, 3.461939e-02), Array(-7.573885e-02, -7.607180e-02, -7.612509e-02), Array(3.494662e-02, 3.435779e-02, 3.424090e-02), Array(1.067658e-01, 1.066368e-01, 1.066647e-01), Array(1.628666e-01, 1.752507e-01, 1.773701e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v16)
    val (v20) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(2.643131e-04, 2.769558e-04, 2.774791e-04), Array(7.374149e-04, 7.945301e-04, 8.055652e-04), Array(9.062327e-04, 1.985665e-03, 2.071564e-03), Array(-8.253811e-04, -1.924153e-03, -2.019588e-03), Array(1.569861e-04, 1.720798e-04, 1.733846e-04), Array(2.435136e-04, 2.569008e-04, 2.576101e-04), Array(5.074400e-02, 5.956255e-02, 5.981791e-02), Array(9.001628e-02, 9.024949e-02, 9.030078e-02), Array(8.410957e-02, 8.415687e-02, 8.415139e-02), Array(2.955773e-02, 2.928045e-02, 2.916849e-02), Array(3.392482e-02, 3.386569e-02, 3.384009e-02), Array(1.137555e-03, 1.222491e-03, 1.229554e-03), Array(4.341739e-02, 4.348660e-02, 4.348823e-02), Array(2.664524e-02, 2.671096e-02, 2.670318e-02), Array(9.539932e-03, 9.545565e-03, 9.522855e-03), Array(6.011492e-02, 6.021580e-02, 6.020549e-02), Array(7.575750e-05, 1.617372e-04, 1.510382e-04), Array(-8.095756e-02, -8.094010e-02, -8.095598e-02), Array(7.998630e-02, 8.002320e-02, 8.002540e-02), Array(6.599671e-02, 6.602928e-02, 6.603780e-02), Array(3.218448e-02, 3.217047e-02, 3.217864e-02), Array(5.382359e-02, 5.378658e-02, 5.379081e-02), Array(4.974812e-02, 4.972458e-02, 4.973763e-02), Array(1.012307e-02, 1.012564e-02, 1.015234e-02), Array(9.985775e-02, 9.986103e-02, 9.989876e-02), Array(8.289003e-02, 8.288085e-02, 8.291978e-02), Array(-4.960233e-02, -4.961586e-02, -4.957318e-02), Array(1.767921e-02, 1.764846e-02, 1.765990e-02), Array(1.887537e-01, 1.796166e-01, 1.793304e-01), Array(1.224875e-04, 1.259446e-04, 1.196861e-04), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v17)
    val (v21) = tf.Stack(axis = 2)(v18, v19, v20)
    val (v22) = tfl.Lattice(lattice_kernel = Array(Array(4.274215e-05, 4.262653e-05, 4.268613e-05), Array(2.470042e-01, 2.468241e-01, 2.468283e-01), Array(7.876278e-02, 7.951456e-02, 7.994442e-02), Array(7.298247e-01, 7.299071e-01, 7.298656e-01), Array(5.481924e-04, 5.545520e-04, 5.553793e-04), Array(8.047482e-01, 8.052374e-01, 8.053391e-01), Array(8.425013e-01, 8.426091e-01, 8.426326e-01), Array(9.997944e-01, 9.998052e-01, 9.998033e-01)), shape = Array(2, 2, 2), tp = "hypercube", units = 3)(v21)
    val (v23) = tf.Transpose(axes = Array(1, 0))(v22)
    val (v24) = tf.GatherV2(axis = 0, indices = Array(0))(v23)
    val (v25) = tf.GatherV2(axis = 0, indices = Array(1))(v23)
    val (v26) = tf.GatherV2(axis = 0, indices = Array(2))(v23)
    val (v27) = tf.Transpose(axes = Array(1, 0))(v24)
    val (v28) = tf.Transpose(axes = Array(1, 0))(v25)
    val (v29) = tf.Transpose(axes = Array(1, 0))(v26)
    val (v30) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(6.296400e-04, 6.296400e-04, 6.296400e-04), Array(2.857146e-02, 2.857152e-02, 2.857171e-02), Array(3.072986e-02, 3.072895e-02, 3.072983e-02), Array(3.073038e-02, 3.073061e-02, 3.072976e-02), Array(3.178326e-02, 3.178383e-02, 3.178291e-02), Array(6.694540e-02, 6.694450e-02, 6.694507e-02), Array(3.953302e-02, 3.953376e-02, 3.953347e-02), Array(3.547420e-03, 3.547300e-03, 3.547210e-03), Array(2.768566e-02, 2.768563e-02, 2.768482e-02), Array(3.082812e-02, 3.082865e-02, 3.082913e-02), Array(3.869530e-03, 3.867860e-03, 3.868700e-03), Array(-3.986576e-02, -3.986517e-02, -3.986248e-02), Array(-3.132889e-02, -3.133032e-02, -3.132826e-02), Array(1.026937e-01, 1.026935e-01, 1.026926e-01), Array(1.396416e-01, 1.396443e-01, 1.396403e-01), Array(-3.035253e-02, -3.035179e-02, -3.035182e-02), Array(-9.731174e-02, -9.731445e-02, -9.731466e-02), Array(1.387743e-01, 1.387714e-01, 1.387731e-01), Array(5.564833e-02, 5.565089e-02, 5.564797e-02), Array(9.876790e-03, 9.876970e-03, 9.879170e-03), Array(6.363952e-02, 6.363690e-02, 6.363475e-02), Array(-4.196537e-02, -4.196560e-02, -4.196608e-02), Array(-3.535090e-03, -3.517690e-03, -3.546890e-03), Array(4.334037e-01, 4.334633e-01, 4.333765e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v27)
    val (v31) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(8.804200e-04, 8.804000e-04, 8.803900e-04), Array(2.895175e-02, 2.895162e-02, 2.895162e-02), Array(3.104630e-02, 3.104518e-02, 3.104626e-02), Array(3.104378e-02, 3.104497e-02, 3.104383e-02), Array(3.104432e-02, 3.104362e-02, 3.104356e-02), Array(6.174426e-02, 6.174425e-02, 6.174453e-02), Array(3.470360e-02, 3.470443e-02, 3.470348e-02), Array(5.390930e-03, 5.390750e-03, 5.390600e-03), Array(2.805464e-02, 2.805193e-02, 2.805494e-02), Array(5.324379e-02, 5.324367e-02, 5.324283e-02), Array(6.352130e-03, 6.352190e-03, 6.353230e-03), Array(-3.641084e-02, -3.641191e-02, -3.641170e-02), Array(-1.464070e-03, -1.464720e-03, -1.464720e-03), Array(8.541387e-02, 8.541274e-02, 8.541507e-02), Array(1.409313e-01, 1.409319e-01, 1.409301e-01), Array(-1.582769e-02, -1.582870e-02, -1.582870e-02), Array(-9.232432e-02, -9.232685e-02, -9.232536e-02), Array(1.613620e-01, 1.613671e-01, 1.613622e-01), Array(6.383336e-02, 6.383431e-02, 6.383550e-02), Array(1.886123e-02, 1.886243e-02, 1.886100e-02), Array(1.762599e-02, 1.762682e-02, 1.762658e-02), Array(3.787899e-02, 3.787744e-02, 3.787637e-02), Array(6.673926e-02, 6.676185e-02, 6.672329e-02), Array(2.113454e-01, 2.313936e-01, 1.989266e-01), Array(2.339154e-02, 3.322900e-03, 3.225803e-02), Array(0.000000e+00, 0.000000e+00, 3.572820e-03), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v28)
    val (v32) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(9.264100e-04, 9.264100e-04, 9.264600e-04), Array(2.903821e-02, 2.903842e-02, 2.903837e-02), Array(3.111073e-02, 3.111144e-02, 3.111171e-02), Array(3.111222e-02, 3.111262e-02, 3.111220e-02), Array(3.111186e-02, 3.111260e-02, 3.111237e-02), Array(6.112742e-02, 6.112896e-02, 6.112786e-02), Array(3.796817e-02, 3.796805e-02, 3.796817e-02), Array(5.615990e-03, 5.616170e-03, 5.616860e-03), Array(2.479461e-02, 2.479523e-02, 2.479318e-02), Array(5.547556e-02, 5.547741e-02, 5.547616e-02), Array(6.523820e-03, 6.524090e-03, 6.522980e-03), Array(-3.626293e-02, -3.626326e-02, -3.626198e-02), Array(4.883100e-04, 4.888800e-04, 4.905200e-04), Array(8.283970e-02, 8.283782e-02, 8.283791e-02), Array(1.410650e-01, 1.410639e-01, 1.410635e-01), Array(-1.277611e-02, -1.277575e-02, -1.277515e-02), Array(-9.081253e-02, -9.081087e-02, -9.081176e-02), Array(1.583679e-01, 1.583651e-01, 1.583642e-01), Array(6.715560e-02, 6.715572e-02, 6.715518e-02), Array(2.032661e-02, 2.032781e-02, 2.032596e-02), Array(3.625990e-03, 3.625750e-03, 3.628020e-03), Array(6.513089e-02, 6.513333e-02, 6.513458e-02), Array(5.668700e-03, 5.687060e-03, 5.652840e-03), Array(2.669159e-01, 2.741115e-01, 2.511694e-01), Array(7.219430e-03, 0.000000e+00, 2.297789e-02), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v29)
    val (v33) = tf.Stack(axis = 2)(v30, v31, v32)
    val (v34) = tfl.Lattice(lattice_kernel = Array(Array(2.891134e-04, 2.891071e-04, 2.891149e-04), Array(3.059029e-01, 3.059023e-01, 3.059008e-01), Array(3.057253e-01, 3.057272e-01, 3.057271e-01), Array(7.146164e-01, 7.146158e-01, 7.146159e-01), Array(3.123229e-01, 3.123234e-01, 3.123227e-01), Array(7.220594e-01, 7.220582e-01, 7.220583e-01), Array(7.215280e-01, 7.215307e-01, 7.215293e-01), Array(9.998274e-01, 9.998274e-01, 9.998274e-01)), shape = Array(2, 2, 2), tp = "hypercube", units = 3)(v33)
    val (v35) = tfl.Linear(linear_layer_bias = -7.665792e-02, linear_layer_kernel = Array(Array(5.014023e-01), Array(5.994027e-01), Array(4.462241e-01)))(v34)
    val (v36) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(0.000000e+00), Array(0.000000e+00), Array(0.000000e+00), Array(0.000000e+00), Array(0.000000e+00), Array(2.115270e-03), Array(3.368160e-03), Array(4.338620e-03), Array(4.971100e-03), Array(5.731500e-03), Array(7.437120e-03), Array(1.706583e-01), Array(6.597205e-02), Array(5.145729e-02), Array(3.949058e-02), Array(4.448175e-02), Array(1.526120e-02), Array(6.465369e-02), Array(3.980908e-02), Array(6.894588e-02), Array(1.187313e-02), Array(4.140979e-02), Array(0.000000e+00), Array(2.103776e-02), Array(7.670009e-02), Array(3.488505e-02), Array(6.620896e-02), Array(1.933086e-02), Array(6.562477e-02), Array(2.711934e-02), Array(4.584974e-02), Array(1.268920e-03)))(v35)
    val (v37) = tf.Minimum(constant = 1.000000e+00)(v36)
    val (v38) = tf.Maximum(constant = 0.000000e+00)(v37)
    return (v38)
  }
}

object d3l3r3c32_mat_ {
  def apply[T:Num](arg0_0: types.Readable2D[T], arg0_1: types.Readable2D[T], arg0_2: types.Readable2D[T], arg0_3: types.Readable2D[T], arg0_4: types.Readable2D[T], arg0_5: types.Readable2D[T], arg0_6: types.Readable2D[T], arg0_7: types.Readable2D[T], arg0_8: types.Readable2D[T])(implicit state: argon.State): (types.Readable2D[T]) = {
    val (v0) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.010000e+02, 2.390000e+02, 4.070000e+02, 6.160000e+02, 8.600000e+02, 1.235000e+03, 1.789000e+03, 2.269000e+03, 2.637000e+03, 3.209000e+03, 3.890000e+03, 4.366000e+03, 5.010000e+03, 5.469000e+03, 6.285000e+03, 7.418000e+03, 8.445000e+03, 9.248000e+03, 1.013400e+04, 1.155000e+04, 1.281300e+04, 1.390400e+04, 1.584400e+04, 1.801800e+04, 2.198700e+04, 2.619100e+04, 3.051800e+04, 3.632300e+04, 3.850900e+04, 4.061300e+04, 4.290800e+04), pwl_calibration_kernel = Array(Array(8.203039e-01, 3.238977e-01, 9.997982e-01), Array(1.796961e-01, 6.761023e-01, -4.316702e-01), Array(0.000000e+00, 0.000000e+00, -4.181372e-01), Array(0.000000e+00, 0.000000e+00, -1.499908e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(arg0_0)
    val (v1) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(9.999936e-01, 2.054911e-05, 0.000000e+00), Array(3.861424e-04, 1.000000e+00, 1.000000e+00), Array(0.000000e+00, 2.612384e-01, 0.000000e+00), Array(2.889932e-01, 8.221087e-01, 3.319979e-01)))(arg0_1)
    val (v2) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(1.000000e+00, 1.000000e+00, 1.000000e+00), Array(1.000000e+00, 1.000000e+00, 9.951944e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(4.851277e-01, 0.000000e+00, 0.000000e+00), Array(9.238859e-01, 8.981647e-01, 3.321293e-02), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(1.280510e-01, 2.540561e-02, 0.000000e+00), Array(9.996220e-01, 9.995376e-01, 1.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 1.041776e-05, 5.392666e-01), Array(1.000000e+00, 8.499510e-02, 2.919677e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(9.290452e-01, 9.229417e-01, 1.404517e-01), Array(7.646580e-01, 0.000000e+00, 3.168492e-01), Array(7.979836e-01, 8.300939e-01, 5.809404e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(3.582794e-01, 2.013192e-01, 1.753582e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(8.415004e-01, 8.146116e-01, 9.978911e-01), Array(0.000000e+00, 4.770723e-01, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 4.418892e-01, 4.729396e-02), Array(3.558412e-04, 1.255865e-02, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(9.998773e-01, 9.997450e-01, 1.000000e+00), Array(2.390604e-02, 8.669382e-03, 7.893134e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(9.554620e-01, 9.105023e-01, 1.324098e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(8.608995e-01, 1.000000e+00, 1.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(4.275583e-04, 7.030503e-03, 3.002471e-01), Array(9.650602e-01, 6.634129e-01, 9.649587e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(1.986683e-04, 2.690534e-01, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(1.620837e-01, 3.443921e-01, 7.548473e-01), Array(1.000000e+00, 6.040853e-01, 7.091681e-01), Array(5.584133e-01, 5.127560e-01, 5.050109e-01), Array(8.966818e-01, 6.581387e-01, 2.587273e-01), Array(1.000000e+00, 1.000000e+00, 1.000000e+00), Array(6.828209e-01, 8.054973e-01, 9.227494e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(5.400239e-01, 7.169222e-01, 2.605941e-01)))(arg0_2)
    val (v3) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(7.980945e-01, 5.124558e-01, 8.352817e-01), Array(6.278130e-01, 2.293402e-01, 7.604997e-05), Array(7.818203e-02, 4.597586e-01, 4.380174e-02), Array(0.000000e+00, 0.000000e+00, 9.981451e-01), Array(2.375985e-02, 3.054987e-01, 9.835088e-01), Array(9.277058e-05, 4.870943e-05, 8.841130e-01), Array(1.000000e+00, 1.000000e+00, 2.743236e-01), Array(8.471529e-01, 8.846452e-01, 3.914030e-01), Array(8.675185e-01, 8.483267e-01, 6.577484e-01), Array(9.894923e-01, 1.000000e+00, 1.000000e+00), Array(0.000000e+00, 0.000000e+00, 1.000000e+00), Array(4.301499e-01, 7.706711e-01, 1.326566e-01)))(arg0_3)
    val (v4) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.110000e+02, 2.180000e+02, 3.260000e+02, 4.370000e+02, 5.620000e+02, 6.730000e+02, 7.810000e+02, 8.890000e+02, 9.970000e+02, 1.104000e+03, 1.212000e+03, 1.320000e+03, 1.429000e+03, 1.536000e+03, 1.651000e+03, 1.772000e+03, 1.898000e+03, 2.038000e+03, 2.194000e+03, 2.362000e+03, 2.555000e+03, 2.750000e+03, 2.996000e+03, 3.366000e+03, 4.095000e+03, 6.274000e+03, 1.098600e+04, 1.198100e+04, 1.643800e+04, 6.570000e+04, 1.379964e+09), pwl_calibration_kernel = Array(Array(1.192874e-01, 1.368130e-01, 2.280134e-01), Array(7.110628e-01, 8.355609e-01, 7.193071e-01), Array(-2.727221e-01, -2.952107e-01, 4.358095e-02), Array(-2.322767e-01, -6.310871e-01, 8.189082e-03), Array(4.841037e-01, -4.547472e-02, -3.650188e-04), Array(1.887329e-01, 3.199415e-03, -3.501773e-04), Array(-1.236677e-03, 1.757866e-03, -3.330112e-04), Array(-1.714242e-02, -2.743919e-03, -7.719153e-02), Array(-1.821548e-02, -1.457874e-03, -1.678562e-01), Array(-1.863056e-02, 1.477101e-05, -3.595669e-01), Array(-2.445138e-02, 1.109624e-04, -2.915037e-01), Array(-5.504930e-02, 3.454774e-04, -9.298954e-02), Array(-9.076118e-03, 7.321910e-03, -4.003877e-04), Array(1.337534e-02, 3.053446e-02, 2.294456e-03), Array(-9.558260e-03, 3.093110e-02, 2.302858e-03), Array(-5.185127e-02, 3.726306e-02, -9.282846e-04), Array(-6.663382e-02, 2.608227e-01, 2.239065e-03), Array(2.512538e-02, 5.765592e-01, 5.949884e-02), Array(-4.149252e-02, 5.062073e-02, 3.544958e-02), Array(-6.254947e-02, 3.356338e-04, 2.390544e-02), Array(-7.413030e-02, 3.368855e-04, 2.104332e-02), Array(-1.184225e-03, 2.871752e-04, 4.417723e-02), Array(1.021349e-02, 2.542138e-04, 5.109982e-02), Array(4.633605e-03, 2.416372e-04, 5.876707e-02), Array(-1.327467e-02, 2.439618e-04, 5.489063e-02), Array(-6.302476e-02, 1.724958e-04, 5.454129e-02), Array(-2.412170e-01, 1.050830e-04, 1.218251e-01), Array(1.639448e-01, -2.157688e-04, -4.079345e-01), Array(1.881221e-02, -2.686381e-04, -8.703233e-02), Array(-3.266774e-01, -2.536178e-04, -3.061411e-02), Array(-1.388972e-01, -4.501343e-04, -1.189908e-02), Array(0.000000e+00, 5.412102e-05, -3.110730e-04)))(arg0_4)
    val (v5) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.160000e+02, 6.190000e+02, 9.200000e+02, 1.228000e+03, 1.533000e+03, 1.849000e+03, 2.165000e+03, 2.499000e+03, 2.849000e+03, 3.243000e+03, 3.632000e+03, 4.073000e+03, 4.559000e+03, 5.122000e+03, 5.653000e+03, 6.230000e+03, 6.891000e+03, 7.635000e+03, 8.466000e+03, 9.275000e+03, 1.013400e+04, 1.107300e+04, 1.221200e+04, 1.363400e+04, 1.538700e+04, 1.783400e+04, 2.107700e+04, 2.581400e+04, 3.398800e+04, 5.627500e+04, 1.309937e+09), pwl_calibration_kernel = Array(Array(7.031095e-01, 2.305214e-01, 1.825933e-01), Array(2.968905e-01, 5.984440e-01, 8.152122e-01), Array(0.000000e+00, -6.496370e-02, 2.168834e-03), Array(0.000000e+00, -3.992462e-02, 2.563000e-05), Array(0.000000e+00, -1.883637e-01, 0.000000e+00), Array(0.000000e+00, -1.764488e-01, 0.000000e+00), Array(0.000000e+00, -2.210013e-01, 0.000000e+00), Array(0.000000e+00, -1.370904e-01, 0.000000e+00), Array(0.000000e+00, 4.002963e-04, 0.000000e+00), Array(0.000000e+00, 6.050508e-01, 0.000000e+00), Array(0.000000e+00, 2.420461e-01, 0.000000e+00), Array(0.000000e+00, 3.171557e-02, 0.000000e+00), Array(0.000000e+00, 1.605088e-02, 0.000000e+00), Array(0.000000e+00, -6.710207e-02, 0.000000e+00), Array(0.000000e+00, -1.976268e-01, 0.000000e+00), Array(0.000000e+00, -3.609529e-01, 0.000000e+00), Array(0.000000e+00, -2.335124e-01, 0.000000e+00), Array(0.000000e+00, -1.399739e-02, 0.000000e+00), Array(0.000000e+00, 8.406918e-04, 0.000000e+00), Array(0.000000e+00, 1.364814e-03, 0.000000e+00), Array(0.000000e+00, 7.186305e-03, 0.000000e+00), Array(0.000000e+00, 4.012606e-02, 0.000000e+00), Array(0.000000e+00, 2.966835e-01, 0.000000e+00), Array(0.000000e+00, 1.859392e-01, 0.000000e+00), Array(0.000000e+00, 2.269532e-01, 0.000000e+00), Array(0.000000e+00, 1.087972e-01, 0.000000e+00), Array(0.000000e+00, -1.497114e-02, 0.000000e+00), Array(0.000000e+00, -7.926583e-02, 0.000000e+00), Array(0.000000e+00, -8.708787e-02, 0.000000e+00), Array(0.000000e+00, 9.176534e-02, 0.000000e+00), Array(0.000000e+00, -3.089774e-02, 0.000000e+00), Array(0.000000e+00, -6.543452e-01, 0.000000e+00)))(arg0_5)
    val (v6) = tfl.CategoricalCalibration(categorical_calibration_kernel = Array(Array(1.000000e+00, 9.998389e-01, 7.306093e-05), Array(1.796711e-01, 6.235123e-01, 3.299139e-01), Array(2.888151e-01, 4.917456e-01, 3.028491e-01)))(arg0_6)
    val (v7) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.000000e+00, 3.000000e+00), pwl_calibration_kernel = Array(Array(7.060755e-01, 1.000000e+00, 9.996968e-01), Array(-7.060755e-01, 0.000000e+00, -9.996968e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(arg0_7)
    val (v8) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 1.000000e+00, 2.000000e+00, 3.000000e+00), pwl_calibration_kernel = Array(Array(5.957059e-01, 6.291432e-01, 3.418171e-01), Array(-1.331757e-01, 3.220390e-01, -1.458801e-01), Array(3.581081e-01, 5.088510e-03, 6.320682e-01), Array(1.395526e-01, -1.363314e-01, 1.655712e-01)))(arg0_8)
    val (v9) = tf.Stack(axis = 2)(v0, v1, v2, v3, v4, v5, v6, v7, v8)
    val (v10_) = tfl.Lattice(lattice_kernel = Array(Array(2.833066e-06, 3.261282e-02, 0.000000e+00), Array(2.721773e-06, 1.420832e-01, 0.000000e+00), Array(2.957741e-06, 1.582711e-01, 9.225555e-03), Array(2.727928e-06, 2.664608e-01, 5.715305e-03), Array(1.075249e-04, 1.467699e-07, 6.679771e-02), Array(1.030644e-04, 2.483385e-07, 1.770698e-01), Array(1.101615e-04, 7.546062e-05, 1.729849e-01), Array(1.052657e-04, 7.970263e-05, 2.878951e-01), Array(3.453668e-06, 1.396563e-01, 0.000000e+00), Array(3.234980e-06, 2.491579e-01, 0.000000e+00), Array(3.440624e-06, 2.690373e-01, 1.209679e-02), Array(3.711724e-02, 3.774262e-01, 8.146662e-03), Array(6.968839e-05, 4.392509e-08, 2.043172e-01), Array(6.711580e-05, 4.411120e-02, 3.149383e-01), Array(7.347013e-05, 6.082714e-05, 3.142071e-01), Array(7.058811e-05, 6.867373e-05, 4.279506e-01), Array(1.298686e-06, 1.346207e-01, 0.000000e+00), Array(5.485082e-02, 2.446095e-01, 0.000000e+00), Array(2.628240e-02, 2.676122e-01, 1.400998e-01), Array(1.265866e-01, 3.764356e-01, 1.289991e-01), Array(0.000000e+00, 3.254562e-04, 1.805888e-01), Array(0.000000e+00, 4.679441e-02, 2.903504e-01), Array(0.000000e+00, 3.708920e-01, 3.052905e-01), Array(0.000000e+00, 4.015085e-01, 4.207545e-01), Array(5.411920e-02, 2.431578e-01, 0.000000e+00), Array(1.317119e-01, 3.533452e-01, 0.000000e+00), Array(1.033008e-01, 3.758529e-01, 9.994529e-01), Array(2.067956e-01, 4.844684e-01, 9.996854e-01), Array(0.000000e+00, 8.585596e-02, 3.311744e-01), Array(0.000000e+00, 2.063311e-01, 4.411959e-01), Array(0.000000e+00, 2.889129e-01, 4.704117e-01), Array(0.000000e+00, 4.055709e-01, 5.870097e-01), Array(4.526915e-02, 1.176391e-01, 0.000000e+00), Array(1.081239e-01, 2.283522e-01, 0.000000e+00), Array(1.283048e-01, 0.000000e+00, 5.518308e-03), Array(1.975873e-01, 0.000000e+00, 3.717811e-03), Array(7.226721e-05, 0.000000e+00, 1.612954e-01), Array(6.925358e-05, 0.000000e+00, 2.700362e-01), Array(1.038868e-03, 0.000000e+00, 2.709847e-01), Array(9.945924e-04, 0.000000e+00, 3.871722e-01), Array(1.395647e-01, 2.293306e-01, 0.000000e+00), Array(1.928713e-01, 3.403271e-01, 0.000000e+00), Array(2.156795e-01, 8.273296e-02, 4.701667e-02), Array(2.797265e-01, 1.555406e-01, 3.618030e-02), Array(0.000000e+00, 0.000000e+00, 3.070526e-01), Array(0.000000e+00, 7.070190e-02, 4.165238e-01), Array(3.091285e-04, 0.000000e+00, 4.242438e-01), Array(3.002353e-04, 0.000000e+00, 5.394309e-01), Array(2.432738e-01, 2.297284e-01, 0.000000e+00), Array(3.454403e-01, 3.406685e-01, 0.000000e+00), Array(4.281494e-01, 7.526426e-01, 2.440594e-01), Array(5.695959e-01, 9.060355e-01, 2.232746e-01), Array(1.075018e-02, 3.461367e-01, 2.812686e-01), Array(1.033141e-02, 4.895050e-01, 3.900192e-01), Array(9.889543e-01, 9.996177e-01, 4.278171e-01), Array(9.999650e-01, 9.996139e-01, 5.441184e-01), Array(3.715902e-01, 3.416118e-01, 0.000000e+00), Array(4.809444e-01, 4.527477e-01, 0.000000e+00), Array(5.882370e-01, 7.549114e-01, 1.000000e+00), Array(7.311454e-01, 9.108840e-01, 1.000000e+00), Array(5.985758e-01, 6.108615e-01, 4.398162e-01), Array(6.996073e-01, 7.487330e-01, 5.491149e-01), Array(9.764643e-01, 9.997739e-01, 6.127051e-01), Array(9.834685e-01, 9.997715e-01, 7.298594e-01), Array(8.616615e-02, 1.426406e-01, 1.411038e-01), Array(1.927602e-01, 2.526481e-01, 2.313170e-01), Array(1.942966e-01, 2.825572e-01, 2.401562e-01), Array(3.007975e-01, 3.896088e-01, 3.688063e-01), Array(1.698681e-03, 6.949869e-02, 2.291831e-01), Array(1.781690e-03, 1.594696e-01, 3.409530e-01), Array(1.464531e-03, 1.224757e-01, 3.566552e-01), Array(1.554469e-03, 2.176241e-01, 4.721603e-01), Array(2.094370e-01, 2.492077e-01, 4.903310e-01), Array(3.176991e-01, 3.592891e-01, 5.912221e-01), Array(3.201806e-01, 3.891285e-01, 9.989876e-01), Array(4.277469e-01, 4.968402e-01, 1.000000e+00), Array(3.170312e-04, 1.657955e-01, 3.460691e-01), Array(3.056385e-04, 2.653376e-01, 4.571860e-01), Array(3.113964e-04, 2.356574e-01, 4.807252e-01), Array(2.995607e-04, 3.309343e-01, 5.989820e-01), Array(2.377228e-01, 2.425235e-01, 6.089332e-01), Array(3.494798e-01, 3.529264e-01, 7.311392e-01), Array(3.532270e-01, 3.840384e-01, 1.000000e+00), Array(4.657947e-01, 4.923013e-01, 1.000000e+00), Array(1.027402e-01, 1.735741e-01, 3.478706e-01), Array(1.719449e-01, 2.725222e-01, 4.603097e-01), Array(1.274351e-01, 3.734928e-01, 5.116892e-01), Array(2.346752e-01, 4.776736e-01, 6.346404e-01), Array(3.415888e-01, 3.512172e-01, 8.324193e-01), Array(4.548569e-01, 4.617949e-01, 9.616883e-01), Array(4.593911e-01, 4.908566e-01, 9.999704e-01), Array(5.743525e-01, 5.995623e-01, 9.999833e-01), Array(6.230251e-01, 3.165540e-01, 4.637823e-01), Array(7.426263e-01, 4.160275e-01, 5.759556e-01), Array(7.510833e-01, 4.584177e-01, 6.209489e-01), Array(8.712101e-01, 5.529231e-01, 7.411034e-01), Array(2.661011e-01, 2.278470e-01, 4.275167e-03), Array(4.102874e-01, 3.389747e-01, 7.820787e-02), Array(4.998564e-01, 3.719893e-01, 1.521729e-01), Array(6.827711e-01, 4.876783e-01, 2.740256e-01), Array(9.819086e-01, 2.700229e-01, 3.376347e-01), Array(9.826466e-01, 3.720431e-01, 4.492956e-01), Array(9.827660e-01, 5.458380e-01, 4.366129e-01), Array(9.835461e-01, 6.197832e-01, 5.442178e-01), Array(3.694533e-01, 3.398021e-01, 4.699941e-01), Array(4.966574e-01, 4.509943e-01, 5.626673e-01), Array(5.383586e-01, 4.842475e-01, 9.986098e-01), Array(6.767090e-01, 6.008301e-01, 9.991726e-01), Array(4.698942e-01, 4.026594e-01, 4.561947e-01), Array(5.790879e-01, 5.107886e-01, 5.679721e-01), Array(5.426160e-01, 7.696313e-01, 5.905957e-01), Array(6.524200e-01, 8.379242e-01, 7.047349e-01), Array(3.887354e-01, 3.399111e-01, 6.584528e-01), Array(5.175599e-01, 4.510581e-01, 6.892738e-01), Array(5.539991e-01, 5.715415e-01, 9.999123e-01), Array(6.942008e-01, 7.018524e-01, 9.999287e-01), Array(1.000000e+00, 4.836947e-01, 4.632617e-01), Array(1.000000e+00, 5.833235e-01, 5.777705e-01), Array(1.000000e+00, 9.998882e-01, 6.495473e-01), Array(1.000000e+00, 9.998842e-01, 7.681618e-01), Array(5.670059e-01, 4.525884e-01, 9.224312e-01), Array(7.143016e-01, 5.637759e-01, 9.147947e-01), Array(7.668199e-01, 6.296896e-01, 1.000000e+00), Array(9.075963e-01, 7.508554e-01, 1.000000e+00), Array(9.997469e-01, 7.119675e-01, 5.798286e-01), Array(9.997582e-01, 8.289670e-01, 6.947667e-01), Array(9.997528e-01, 1.000000e+00, 7.541236e-01), Array(9.997646e-01, 1.000000e+00, 8.722484e-01), Array(9.524748e-02, 1.586157e-01, 1.773338e-02), Array(2.024721e-01, 2.671194e-01, 1.151997e-02), Array(2.083207e-01, 2.404923e-02, 1.563009e-01), Array(3.137638e-01, 1.271732e-01, 1.497688e-01), Array(0.000000e+00, 1.323741e-03, 1.780329e-01), Array(0.000000e+00, 1.447953e-03, 2.919634e-01), Array(0.000000e+00, 4.371216e-04, 2.741579e-01), Array(0.000000e+00, 4.410106e-04, 3.784550e-01), Array(2.100624e-01, 2.674405e-01, 1.656112e-02), Array(3.177230e-01, 3.760515e-01, 1.265314e-02), Array(3.232808e-01, 1.418224e-01, 2.573037e-01), Array(4.282750e-01, 2.438566e-01, 2.609520e-01), Array(0.000000e+00, 9.206484e-04, 2.941202e-01), Array(0.000000e+00, 8.898993e-02, 4.077198e-01), Array(0.000000e+00, 4.315608e-04, 4.117191e-01), Array(2.171861e-02, 4.353445e-04, 5.198530e-01), Array(2.561165e-01, 2.658725e-01, 6.595099e-03), Array(3.716939e-01, 3.747510e-01, 4.106914e-03), Array(3.798990e-01, 1.433816e-01, 1.392598e-01), Array(4.938771e-01, 2.444308e-01, 1.333938e-01), Array(1.067727e-01, 3.554253e-04, 3.280171e-01), Array(1.524181e-01, 8.161620e-02, 4.400778e-01), Array(2.425944e-01, 2.920229e-04, 4.271743e-01), Array(3.820764e-01, 2.947432e-04, 5.324554e-01), Array(3.747344e-01, 3.740228e-01, 4.571014e-01), Array(4.889861e-01, 4.828489e-01, 5.750851e-01), Array(4.921986e-01, 2.636524e-01, 2.942716e-01), Array(6.066715e-01, 3.604865e-01, 4.256095e-01), Array(4.221549e-01, 1.180905e-01, 4.540499e-01), Array(5.720411e-01, 2.364169e-01, 5.646030e-01), Array(6.777892e-01, 0.000000e+00, 5.421495e-01), Array(8.213311e-01, 0.000000e+00, 6.535289e-01), Array(1.908649e-01, 2.297691e-01, 0.000000e+00), Array(2.864912e-01, 3.411781e-01, 0.000000e+00), Array(2.706535e-01, 2.360640e-02, 0.000000e+00), Array(3.513956e-01, 1.124044e-01, 0.000000e+00), Array(0.000000e+00, 1.462757e-01, 2.688740e-01), Array(0.000000e+00, 2.306848e-01, 3.814481e-01), Array(0.000000e+00, 0.000000e+00, 2.908905e-01), Array(0.000000e+00, 0.000000e+00, 4.179216e-01), Array(3.012640e-01, 3.415913e-01, 0.000000e+00), Array(3.937286e-01, 4.528485e-01, 0.000000e+00), Array(3.718876e-01, 7.095883e-01, 0.000000e+00), Array(4.484234e-01, 8.281937e-01, 0.000000e+00), Array(0.000000e+00, 6.378541e-01, 3.735987e-01), Array(0.000000e+00, 7.665709e-01, 4.862674e-01), Array(0.000000e+00, 9.238448e-01, 4.160870e-01), Array(0.000000e+00, 9.997125e-01, 5.381110e-01), Array(3.704190e-01, 3.416379e-01, 0.000000e+00), Array(4.903148e-01, 4.528160e-01, 0.000000e+00), Array(5.176995e-01, 7.142890e-01, 0.000000e+00), Array(6.570432e-01, 8.090956e-01, 0.000000e+00), Array(6.060648e-01, 6.435380e-01, 3.772659e-01), Array(5.982736e-01, 7.640445e-01, 4.915645e-01), Array(7.135698e-01, 1.000000e+00, 4.329590e-01), Array(8.078748e-01, 9.999714e-01, 5.517794e-01), Array(5.048352e-01, 4.530404e-01, 5.269014e-01), Array(6.308846e-01, 5.641981e-01, 6.735914e-01), Array(6.678243e-01, 7.273272e-01, 4.061539e-01), Array(8.182542e-01, 8.146168e-01, 5.560568e-01), Array(9.127780e-01, 7.753713e-01, 5.654744e-01), Array(1.000000e+00, 8.835905e-01, 6.768669e-01), Array(1.000000e+00, 9.998792e-01, 5.836008e-01), Array(1.000000e+00, 9.998173e-01, 7.151945e-01), Array(2.379247e-01, 2.757113e-01, 3.723862e-01), Array(3.484372e-01, 3.847028e-01, 4.965942e-01), Array(3.516333e-01, 3.705395e-01, 8.682359e-01), Array(4.585024e-01, 4.788348e-01, 1.000000e+00), Array(1.641767e-01, 1.117728e-01, 2.663158e-01), Array(2.913235e-01, 1.943125e-01, 3.808660e-01), Array(2.615520e-01, 2.328314e-04, 3.968494e-01), Array(3.908016e-01, 2.348432e-04, 5.096342e-01), Array(3.588796e-01, 3.842689e-01, 2.722583e-01), Array(4.705107e-01, 4.933745e-01, 3.938128e-01), Array(4.741701e-01, 4.806741e-01, 7.778440e-01), Array(5.820494e-01, 5.886475e-01, 9.196564e-01), Array(3.702640e-01, 2.483182e-01, 3.899589e-01), Array(4.854878e-01, 3.316346e-01, 5.045113e-01), Array(4.590003e-01, 2.357855e-04, 5.290905e-01), Array(5.729569e-01, 8.718161e-02, 6.489696e-01), Array(3.662015e-01, 3.808332e-01, 3.996587e-01), Array(4.811922e-01, 4.902171e-01, 5.036014e-01), Array(4.862041e-01, 4.795578e-01, 6.808632e-01), Array(5.989873e-01, 5.875399e-01, 7.735791e-01), Array(6.149161e-01, 2.768684e-01, 4.454937e-01), Array(6.930978e-01, 3.632410e-01, 5.575048e-01), Array(7.182440e-01, 5.325890e-02, 5.785031e-01), Array(7.894018e-01, 1.731155e-01, 6.916804e-01), Array(4.871521e-01, 4.889772e-01, 6.587801e-01), Array(6.019662e-01, 5.984032e-01, 7.819114e-01), Array(6.062561e-01, 5.880195e-01, 1.000000e+00), Array(7.211004e-01, 6.952860e-01, 1.000000e+00), Array(8.228595e-01, 4.165185e-01, 5.650820e-01), Array(8.746150e-01, 5.028670e-01, 6.769598e-01), Array(8.451983e-01, 1.493372e-02, 7.249446e-01), Array(8.101500e-01, 1.302362e-01, 8.402050e-01), Array(3.489955e-01, 3.419538e-01, 6.907228e-02), Array(4.722106e-01, 4.529156e-01, 2.079038e-01), Array(5.004876e-01, 5.376149e-01, 0.000000e+00), Array(6.526662e-01, 6.337597e-01, 0.000000e+00), Array(9.999754e-01, 8.093978e-01, 3.877891e-01), Array(9.999763e-01, 8.945589e-01, 4.995959e-01), Array(9.999758e-01, 8.694621e-01, 3.033538e-01), Array(9.999769e-01, 8.662013e-01, 4.316491e-01), Array(4.807735e-01, 4.539683e-01, 2.521976e-01), Array(6.113737e-01, 5.646702e-01, 3.771790e-01), Array(6.483779e-01, 7.624577e-01, 6.898620e-01), Array(8.146252e-01, 8.621084e-01, 8.374001e-01), Array(9.999737e-01, 8.629903e-01, 4.985113e-01), Array(9.999747e-01, 9.705162e-01, 6.116623e-01), Array(9.999741e-01, 9.725001e-01, 5.707821e-01), Array(9.999752e-01, 9.720085e-01, 6.843163e-01), Array(4.650804e-01, 4.533299e-01, 1.157574e-01), Array(5.765840e-01, 5.642217e-01, 2.047494e-01), Array(5.722261e-01, 7.047418e-01, 2.072694e-04), Array(6.712487e-01, 8.139662e-01, 2.035029e-04), Array(1.017555e-02, 8.620434e-01, 5.258067e-01), Array(8.586911e-03, 9.667706e-01, 6.384085e-01), Array(2.128304e-01, 9.541069e-01, 5.019634e-01), Array(2.149654e-01, 9.483534e-01, 6.177667e-01), Array(5.920023e-01, 5.648587e-01, 9.149763e-01), Array(7.008631e-01, 6.757420e-01, 1.000000e+00), Array(6.950492e-01, 9.999410e-01, 1.000000e+00), Array(7.898619e-01, 9.999284e-01, 1.000000e+00), Array(3.741472e-03, 1.000000e+00, 6.783921e-01), Array(2.763113e-03, 1.000000e+00, 7.924225e-01), Array(1.979827e-01, 9.998673e-01, 8.735949e-01), Array(2.003009e-01, 9.998655e-01, 9.721567e-01), Array(4.161217e-06, 1.378334e-01, 0.000000e+00), Array(3.861329e-06, 2.475334e-01, 0.000000e+00), Array(4.072229e-06, 2.683293e-01, 2.893297e-03), Array(1.596923e-02, 3.765457e-01, 2.581379e-03), Array(1.720936e-04, 8.171649e-08, 1.479010e-01), Array(1.660992e-04, 2.143394e-02, 2.581358e-01), Array(1.752935e-04, 8.003144e-05, 2.293164e-01), Array(1.688516e-04, 8.756104e-05, 3.511306e-01), Array(4.733560e-06, 2.449062e-01, 0.000000e+00), Array(3.909963e-02, 3.547054e-01, 0.000000e+00), Array(3.227867e-02, 3.769628e-01, 3.019515e-03), Array(1.367123e-01, 4.852331e-01, 2.669849e-03), Array(1.854585e-03, 3.527804e-02, 3.068630e-01), Array(3.476714e-03, 1.588007e-01, 4.163893e-01), Array(2.095138e-03, 4.248386e-04, 4.165396e-01), Array(3.752916e-03, 5.020489e-04, 5.329099e-01), Array(6.296439e-02, 2.397763e-01, 0.000000e+00), Array(1.439058e-01, 3.500649e-01, 0.000000e+00), Array(1.208148e-01, 3.739120e-01, 3.675786e-02), Array(2.251072e-01, 4.826232e-01, 3.575251e-02), Array(0.000000e+00, 3.813536e-02, 2.705372e-01), Array(0.000000e+00, 1.614940e-01, 3.796389e-01), Array(0.000000e+00, 3.122285e-01, 4.078322e-01), Array(0.000000e+00, 3.844559e-01, 5.258438e-01), Array(1.443631e-01, 3.491008e-01, 0.000000e+00), Array(2.287991e-01, 4.596044e-01, 0.000000e+00), Array(2.063651e-01, 4.818567e-01, 9.792661e-01), Array(3.134204e-01, 5.905638e-01, 9.806479e-01), Array(8.490514e-05, 2.012267e-01, 4.358209e-01), Array(4.011222e-02, 3.208284e-01, 5.443435e-01), Array(9.192810e-03, 3.614759e-01, 6.237820e-01), Array(1.446470e-01, 5.820905e-01, 7.416542e-01), Array(1.228992e-01, 2.272494e-01, 0.000000e+00), Array(1.752127e-01, 3.383130e-01, 0.000000e+00), Array(2.134394e-01, 4.212036e-02, 3.748254e-03), Array(2.819998e-01, 1.151541e-01, 3.583980e-03), Array(0.000000e+00, 0.000000e+00, 8.364218e-02), Array(0.000000e+00, 0.000000e+00, 2.297873e-01), Array(3.869269e-04, 0.000000e+00, 1.886760e-01), Array(3.741523e-04, 0.000000e+00, 3.253141e-01), Array(1.900616e-01, 3.395424e-01, 0.000000e+00), Array(2.309480e-01, 4.507050e-01, 0.000000e+00), Array(2.644447e-01, 2.953072e-01, 5.666982e-03), Array(3.267698e-01, 3.717473e-01, 5.414729e-03), Array(0.000000e+00, 1.368800e-01, 3.641011e-01), Array(0.000000e+00, 2.427577e-01, 4.842254e-01), Array(3.179421e-04, 0.000000e+00, 4.670435e-01), Array(3.218226e-04, 0.000000e+00, 5.951509e-01), Array(3.450646e-01, 3.400022e-01, 0.000000e+00), Array(4.394827e-01, 4.511317e-01, 0.000000e+00), Array(5.437620e-01, 7.337093e-01, 0.000000e+00), Array(6.829452e-01, 8.854019e-01, 0.000000e+00), Array(1.442979e-01, 3.787768e-01, 2.489327e-01), Array(2.632962e-01, 5.161936e-01, 3.870692e-01), Array(9.999149e-01, 9.996188e-01, 4.385603e-01), Array(9.999183e-01, 9.996147e-01, 5.749155e-01), Array(4.093645e-01, 4.526166e-01, 0.000000e+00), Array(4.916151e-01, 5.637983e-01, 0.000000e+00), Array(5.447019e-01, 7.481836e-01, 9.387187e-01), Array(6.486768e-01, 8.933532e-01, 9.405749e-01), Array(4.853216e-01, 6.738707e-01, 5.093074e-01), Array(5.697592e-01, 8.047255e-01, 6.256607e-01), Array(7.774332e-01, 9.997801e-01, 8.230566e-01), Array(7.792631e-01, 9.997778e-01, 9.485189e-01), Array(1.924462e-01, 2.466580e-01, 6.467514e-04), Array(2.988692e-01, 3.568558e-01, 5.760877e-02), Array(3.004673e-01, 3.869848e-01, 1.925291e-02), Array(4.068847e-01, 4.948796e-01, 1.728024e-01), Array(1.555419e-02, 1.350906e-01, 3.445296e-01), Array(1.525068e-02, 2.383925e-01, 4.575587e-01), Array(1.481979e-02, 2.833235e-01, 4.494701e-01), Array(1.450819e-02, 3.932216e-01, 5.669882e-01), Array(3.177673e-01, 3.534764e-01, 3.416333e-01), Array(4.256828e-01, 4.637847e-01, 4.421194e-01), Array(4.280882e-01, 4.932434e-01, 4.591556e-01), Array(5.353447e-01, 6.016082e-01, 5.979370e-01), Array(4.843714e-04, 2.510509e-01, 4.605115e-01), Array(4.696989e-04, 3.549833e-01, 5.728835e-01), Array(4.774237e-04, 4.713489e-01, 5.999642e-01), Array(4.622907e-04, 5.656433e-01, 7.180495e-01), Array(3.486928e-01, 3.475343e-01, 3.956312e-01), Array(4.609958e-01, 4.581386e-01, 5.188063e-01), Array(4.650446e-01, 4.871473e-01, 1.000000e+00), Array(5.778788e-01, 5.960203e-01, 1.000000e+00), Array(2.316292e-01, 2.554465e-01, 4.590094e-01), Array(3.374887e-01, 3.594100e-01, 5.723621e-01), Array(2.921511e-01, 5.098338e-01, 6.641912e-01), Array(4.007075e-01, 6.221756e-01, 7.848578e-01), Array(4.554650e-01, 4.570487e-01, 7.403368e-01), Array(5.694033e-01, 5.678390e-01, 8.431271e-01), Array(5.741989e-01, 5.943093e-01, 9.995735e-01), Array(6.893718e-01, 7.034602e-01, 9.996400e-01), Array(9.999996e-01, 4.185264e-01, 5.732577e-01), Array(9.999997e-01, 5.204226e-01, 6.861668e-01), Array(9.999996e-01, 7.286150e-01, 7.342837e-01), Array(9.999997e-01, 7.936397e-01, 8.511833e-01), Array(3.597649e-01, 3.381350e-01, 0.000000e+00), Array(4.935938e-01, 4.493481e-01, 0.000000e+00), Array(5.609761e-01, 4.811703e-01, 0.000000e+00), Array(7.201262e-01, 5.959830e-01, 2.391843e-02), Array(9.443232e-01, 3.523451e-01, 4.529017e-01), Array(9.462607e-01, 4.565564e-01, 5.651988e-01), Array(9.460996e-01, 6.702557e-01, 4.057923e-01), Array(9.481220e-01, 7.462856e-01, 5.356593e-01), Array(4.470558e-01, 4.503401e-01, 1.819634e-01), Array(5.588268e-01, 5.615765e-01, 3.011977e-01), Array(5.737916e-01, 5.876748e-01, 4.019678e-01), Array(6.900579e-01, 7.017155e-01, 4.573572e-01), Array(3.473986e-01, 5.056298e-01, 5.729080e-01), Array(4.587059e-01, 6.137313e-01, 6.861601e-01), Array(4.249277e-01, 9.255944e-01, 6.667600e-01), Array(5.372701e-01, 9.996603e-01, 7.876737e-01), Array(4.873012e-01, 4.505607e-01, 5.665357e-01), Array(6.035116e-01, 5.617685e-01, 5.458389e-01), Array(6.152132e-01, 6.342120e-01, 9.998276e-01), Array(7.335234e-01, 7.568812e-01, 9.998319e-01), Array(8.291628e-01, 5.661632e-01, 5.760748e-01), Array(8.256080e-01, 6.646875e-01, 6.912051e-01), Array(8.298844e-01, 9.998928e-01, 9.479852e-01), Array(8.262311e-01, 9.998895e-01, 9.997932e-01), Array(6.655889e-01, 5.635997e-01, 7.931328e-01), Array(7.973819e-01, 6.748152e-01, 7.620207e-01), Array(8.218606e-01, 7.126834e-01, 9.998931e-01), Array(9.456884e-01, 8.280285e-01, 9.998958e-01), Array(9.930450e-01, 8.114238e-01, 6.916018e-01), Array(9.931310e-01, 9.270056e-01, 8.075666e-01), Array(9.917301e-01, 1.000000e+00, 9.313787e-01), Array(9.917542e-01, 1.000000e+00, 9.999380e-01), Array(2.041630e-01, 2.670015e-01, 1.046991e-02), Array(3.107001e-01, 3.756749e-01, 9.574028e-03), Array(3.156691e-01, 1.370477e-01, 1.111607e-02), Array(4.196037e-01, 2.399958e-01, 1.077578e-02), Array(0.000000e+00, 1.772219e-03, 2.904001e-01), Array(0.000000e+00, 7.330788e-02, 4.042409e-01), Array(0.000000e+00, 2.691189e-02, 3.110411e-01), Array(0.000000e+00, 2.714055e-02, 4.217238e-01), Array(3.197290e-01, 3.751873e-01, 2.417878e-02), Array(4.263597e-01, 4.838500e-01, 2.307355e-02), Array(4.307194e-01, 2.632872e-01, 8.325606e-02), Array(5.334988e-01, 3.643812e-01, 7.923510e-02), Array(0.000000e+00, 1.088876e-01, 4.062195e-01), Array(3.253655e-02, 2.415020e-01, 5.198172e-01), Array(5.470114e-02, 8.730377e-02, 4.954738e-01), Array(1.613675e-01, 8.844079e-02, 6.088758e-01), Array(3.706459e-01, 3.728148e-01, 2.140698e-03), Array(4.860297e-01, 4.817750e-01, 7.504363e-02), Array(4.942516e-01, 2.661702e-01, 3.120305e-03), Array(6.075898e-01, 3.656041e-01, 3.021535e-03), Array(2.444483e-01, 9.446210e-02, 4.406591e-01), Array(4.089069e-01, 2.238772e-01, 5.526528e-01), Array(5.388714e-01, 1.345588e-02, 4.486425e-01), Array(6.947285e-01, 1.348129e-02, 5.574505e-01), Array(4.886002e-01, 4.811200e-01, 5.651384e-01), Array(6.030080e-01, 5.900437e-01, 6.954163e-01), Array(6.066221e-01, 4.108512e-01, 4.887118e-01), Array(7.210265e-01, 5.051768e-01, 6.230988e-01), Array(8.508081e-01, 2.690698e-01, 5.642657e-01), Array(1.000000e+00, 3.953995e-01, 6.750876e-01), Array(1.000000e+00, 3.807485e-02, 6.154810e-01), Array(1.000000e+00, 3.845620e-02, 7.317722e-01), Array(2.831349e-01, 3.406973e-01, 1.538589e-01), Array(3.702885e-01, 4.520085e-01, 2.163521e-01), Array(3.452920e-01, 2.725723e-01, 3.311810e-01), Array(4.183559e-01, 3.417397e-01, 3.205139e-01), Array(0.000000e+00, 2.101453e-01, 3.808171e-01), Array(0.000000e+00, 3.038513e-01, 4.934577e-01), Array(0.000000e+00, 0.000000e+00, 4.332904e-01), Array(0.000000e+00, 0.000000e+00, 5.446808e-01), Array(3.863313e-01, 4.525148e-01, 5.188097e-02), Array(4.692266e-01, 5.637493e-01, 5.807383e-02), Array(4.391624e-01, 7.045576e-01, 3.925048e-01), Array(5.119904e-01, 8.097739e-01, 3.786487e-01), Array(0.000000e+00, 6.184872e-01, 4.834405e-01), Array(0.000000e+00, 7.323321e-01, 5.958574e-01), Array(1.726093e-02, 8.192571e-01, 5.350229e-01), Array(1.253666e-01, 9.111193e-01, 6.458652e-01), Array(4.955240e-01, 4.526311e-01, 6.378759e-07), Array(6.230602e-01, 5.638077e-01, 9.176260e-02), Array(6.615393e-01, 6.420397e-01, 0.000000e+00), Array(8.142903e-01, 6.835592e-01, 0.000000e+00), Array(6.996832e-01, 6.690312e-01, 4.889138e-01), Array(7.964150e-01, 7.458608e-01, 6.034469e-01), Array(1.000000e+00, 1.000000e+00, 5.401323e-01), Array(1.000000e+00, 8.826836e-01, 6.539636e-01), Array(6.383192e-01, 5.641483e-01, 8.132519e-01), Array(7.755838e-01, 6.753181e-01, 9.560345e-01), Array(8.268436e-01, 5.282752e-01, 9.476037e-01), Array(9.911336e-01, 5.970204e-01, 9.807726e-01), Array(1.000000e+00, 7.401594e-01, 6.765771e-01), Array(1.000000e+00, 8.214196e-01, 7.889096e-01), Array(1.000000e+00, 6.565390e-01, 7.492996e-01), Array(1.000000e+00, 6.110142e-01, 8.680689e-01), Array(3.478038e-01, 3.828992e-01, 7.206182e-01), Array(4.571250e-01, 4.920844e-01, 8.583591e-01), Array(4.597106e-01, 4.805133e-01, 9.999022e-01), Array(5.654248e-01, 5.886385e-01, 9.999045e-01), Array(3.221132e-01, 2.455010e-01, 3.707839e-01), Array(4.538549e-01, 3.409345e-01, 4.864703e-01), Array(4.289238e-01, 2.121251e-01, 4.950617e-01), Array(5.523465e-01, 3.507808e-01, 6.173182e-01), Array(4.702986e-01, 4.908360e-01, 4.288247e-01), Array(5.808071e-01, 6.000620e-01, 5.488316e-01), Array(5.837531e-01, 5.914635e-01, 5.507731e-01), Array(6.902735e-01, 6.990177e-01, 6.809582e-01), Array(5.487741e-01, 3.711298e-01, 4.936578e-01), Array(6.618842e-01, 4.684951e-01, 6.096574e-01), Array(6.413350e-01, 5.617280e-01, 5.435213e-01), Array(7.495947e-01, 6.968265e-01, 6.702799e-01), Array(4.818856e-01, 4.863952e-01, 6.436871e-01), Array(5.967932e-01, 5.959329e-01, 7.517148e-01), Array(6.018509e-01, 5.900301e-01, 7.785875e-01), Array(7.143846e-01, 6.975722e-01, 8.858785e-01), Array(8.330408e-01, 3.833873e-01, 5.581321e-01), Array(8.769873e-01, 4.838026e-01, 6.713299e-01), Array(8.676867e-01, 6.059336e-01, 6.433052e-01), Array(8.467988e-01, 7.508571e-01, 7.652416e-01), Array(6.011861e-01, 5.944527e-01, 6.987833e-01), Array(7.160363e-01, 7.040284e-01, 8.293801e-01), Array(7.204516e-01, 7.014170e-01, 6.694137e-01), Array(8.351983e-01, 8.074795e-01, 7.802296e-01), Array(9.294404e-01, 5.375312e-01, 6.756852e-01), Array(9.182082e-01, 6.339959e-01, 7.884858e-01), Array(9.081112e-01, 9.223247e-01, 7.310744e-01), Array(9.016976e-01, 9.209674e-01, 8.623734e-01), Array(4.718256e-01, 4.523286e-01, 6.776216e-01), Array(6.042506e-01, 5.634750e-01, 8.136492e-01), Array(6.456164e-01, 5.869017e-01, 9.997559e-01), Array(8.178294e-01, 6.784780e-01, 9.997659e-01), Array(9.999717e-01, 8.800970e-01, 4.958062e-01), Array(9.999728e-01, 9.355458e-01, 6.087939e-01), Array(9.999722e-01, 6.268206e-01, 3.704800e-01), Array(9.999732e-01, 6.076068e-01, 4.867985e-01), Array(6.136503e-01, 5.641712e-01, 2.055622e-01), Array(7.581459e-01, 6.752134e-01, 3.296120e-01), Array(8.126585e-01, 8.017915e-01, 8.444121e-02), Array(1.000000e+00, 9.010326e-01, 2.166087e-01), Array(9.999700e-01, 9.364330e-01, 6.052826e-01), Array(9.999711e-01, 9.781447e-01, 7.190251e-01), Array(9.999705e-01, 9.426069e-01, 4.569189e-01), Array(9.999715e-01, 9.418010e-01, 5.783668e-01), Array(5.779405e-01, 5.639094e-01, 3.416397e-01), Array(6.872393e-01, 6.750062e-01, 4.302014e-01), Array(6.786553e-01, 5.969627e-01, 1.323617e-01), Array(7.697546e-01, 6.910965e-01, 2.278665e-01), Array(0.000000e+00, 8.573173e-01, 6.357736e-01), Array(0.000000e+00, 8.908687e-01, 7.492126e-01), Array(1.798692e-01, 5.501910e-01, 5.099313e-01), Array(1.822408e-01, 5.340737e-01, 6.276337e-01), Array(7.002870e-01, 6.756181e-01, 8.282405e-01), Array(8.046690e-01, 7.866818e-01, 9.574668e-01), Array(7.926602e-01, 8.710296e-01, 8.249399e-01), Array(8.769657e-01, 9.842502e-01, 8.284016e-01), Array(0.000000e+00, 9.984316e-01, 7.908911e-01), Array(0.000000e+00, 9.989438e-01, 9.067953e-01), Array(1.665891e-01, 9.866151e-01, 7.118148e-01), Array(1.691414e-01, 9.875315e-01, 7.881114e-01)), shape = Array(2, 2, 2, 2, 2, 2, 2, 2, 2), tp = "hypercube", units = 3)(v9)
    val v10 = Materialize(v10_)
    val (v11) = tf.Transpose(axes = Array(1, 0))(v10)
    val (v12) = tf.GatherV2(axis = 0, indices = Array(0))(v11)
    val (v13) = tf.GatherV2(axis = 0, indices = Array(1))(v11)
    val (v14) = tf.GatherV2(axis = 0, indices = Array(2))(v11)
    val (v15) = tf.Transpose(axes = Array(1, 0))(v12)
    val (v16) = tf.Transpose(axes = Array(1, 0))(v13)
    val (v17) = tf.Transpose(axes = Array(1, 0))(v14)
    val (v18) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(1.685168e-02, 1.686926e-02, 1.695032e-02), Array(2.524310e-02, 2.530418e-02, 2.538806e-02), Array(4.644777e-02, 4.656152e-02, 4.664706e-02), Array(4.902320e-02, 4.920506e-02, 4.932190e-02), Array(3.756467e-02, 3.764254e-02, 3.775023e-02), Array(1.808184e-02, 1.814553e-02, 1.827653e-02), Array(2.206481e-02, 2.215248e-02, 2.228662e-02), Array(6.435342e-02, 6.450534e-02, 6.464353e-02), Array(6.521964e-02, 6.537449e-02, 6.551072e-02), Array(1.254393e-01, 1.256431e-01, 1.257779e-01), Array(1.115085e-01, 1.117104e-01, 1.118442e-01), Array(-9.046063e-02, -9.023130e-02, -9.010229e-02), Array(-3.847048e-02, -3.812110e-02, -3.795889e-02), Array(-1.369808e-01, -1.366505e-01, -1.364981e-01), Array(1.222546e-01, 1.224025e-01, 1.224544e-01), Array(2.017081e-01, 2.018506e-01, 2.018810e-01), Array(4.271859e-02, 4.285103e-02, 4.285818e-02), Array(-3.811210e-02, -3.796214e-02, -3.795689e-02), Array(9.310746e-02, 9.335017e-02, 9.336621e-02), Array(-3.032428e-02, -3.027469e-02, -3.030223e-02), Array(2.823347e-02, 2.830333e-02, 2.827948e-02), Array(2.606426e-01, 2.581823e-01, 2.564735e-01), Array(3.279507e-03, 2.605081e-03, 2.680361e-03), Array(6.060600e-04, 5.807877e-04, 4.280806e-04), Array(-3.902912e-04, -3.862381e-04, -2.184510e-04), Array(-7.571578e-04, -7.628202e-04, -7.549524e-04), Array(-7.638335e-04, -7.768869e-04, -7.607341e-04), Array(-9.263754e-04, -9.411573e-04, -9.217262e-04), Array(-1.271307e-03, -1.149178e-03, -1.310766e-03), Array(-2.380967e-03, -2.377450e-03, -2.376914e-03), Array(1.865149e-03, 2.007365e-03, 1.737535e-03), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v15)
    val (v19) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(4.067400e-04, 3.962200e-04, 3.957200e-04), Array(3.644344e-02, 3.553848e-02, 3.545070e-02), Array(9.555107e-02, 9.507535e-02, 9.502749e-02), Array(9.471026e-02, 9.428352e-02, 9.424859e-02), Array(-1.113766e-02, -1.172061e-02, -1.176704e-02), Array(7.872340e-02, 7.822590e-02, 7.817809e-02), Array(5.788523e-02, 5.738348e-02, 5.733493e-02), Array(7.183644e-02, 7.135305e-02, 7.130170e-02), Array(5.032328e-02, 4.983091e-02, 4.977050e-02), Array(5.565408e-02, 5.522424e-02, 5.518392e-02), Array(1.777911e-02, 1.718360e-02, 1.710904e-02), Array(9.823185e-02, 9.772748e-02, 9.764802e-02), Array(8.706689e-02, 8.674103e-02, 8.665693e-02), Array(5.230218e-02, 5.198377e-02, 5.189341e-02), Array(-3.900397e-02, -3.937382e-02, -3.946948e-02), Array(-8.055365e-02, -8.096004e-02, -8.107477e-02), Array(-1.440364e-02, -1.482666e-02, -1.494259e-02), Array(8.790910e-03, 8.314970e-03, 8.198560e-03), Array(1.251640e-03, 7.743800e-04, 6.550600e-04), Array(8.691370e-03, 8.215310e-03, 8.097830e-03), Array(-2.222480e-03, -2.699320e-03, -2.821860e-03), Array(-2.946544e-02, -2.995187e-02, -3.008717e-02), Array(-4.978780e-03, -5.398630e-03, -5.513730e-03), Array(1.023113e-01, 1.018477e-01, 1.017562e-01), Array(3.496623e-02, 3.465807e-02, 3.461939e-02), Array(-7.573885e-02, -7.607180e-02, -7.612509e-02), Array(3.494662e-02, 3.435779e-02, 3.424090e-02), Array(1.067658e-01, 1.066368e-01, 1.066647e-01), Array(1.628666e-01, 1.752507e-01, 1.773701e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v16)
    val (v20) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(2.643131e-04, 2.769558e-04, 2.774791e-04), Array(7.374149e-04, 7.945301e-04, 8.055652e-04), Array(9.062327e-04, 1.985665e-03, 2.071564e-03), Array(-8.253811e-04, -1.924153e-03, -2.019588e-03), Array(1.569861e-04, 1.720798e-04, 1.733846e-04), Array(2.435136e-04, 2.569008e-04, 2.576101e-04), Array(5.074400e-02, 5.956255e-02, 5.981791e-02), Array(9.001628e-02, 9.024949e-02, 9.030078e-02), Array(8.410957e-02, 8.415687e-02, 8.415139e-02), Array(2.955773e-02, 2.928045e-02, 2.916849e-02), Array(3.392482e-02, 3.386569e-02, 3.384009e-02), Array(1.137555e-03, 1.222491e-03, 1.229554e-03), Array(4.341739e-02, 4.348660e-02, 4.348823e-02), Array(2.664524e-02, 2.671096e-02, 2.670318e-02), Array(9.539932e-03, 9.545565e-03, 9.522855e-03), Array(6.011492e-02, 6.021580e-02, 6.020549e-02), Array(7.575750e-05, 1.617372e-04, 1.510382e-04), Array(-8.095756e-02, -8.094010e-02, -8.095598e-02), Array(7.998630e-02, 8.002320e-02, 8.002540e-02), Array(6.599671e-02, 6.602928e-02, 6.603780e-02), Array(3.218448e-02, 3.217047e-02, 3.217864e-02), Array(5.382359e-02, 5.378658e-02, 5.379081e-02), Array(4.974812e-02, 4.972458e-02, 4.973763e-02), Array(1.012307e-02, 1.012564e-02, 1.015234e-02), Array(9.985775e-02, 9.986103e-02, 9.989876e-02), Array(8.289003e-02, 8.288085e-02, 8.291978e-02), Array(-4.960233e-02, -4.961586e-02, -4.957318e-02), Array(1.767921e-02, 1.764846e-02, 1.765990e-02), Array(1.887537e-01, 1.796166e-01, 1.793304e-01), Array(1.224875e-04, 1.259446e-04, 1.196861e-04), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v17)
    val (v21) = tf.Stack(axis = 2)(v18, v19, v20)
    val (v22_) = tfl.Lattice(lattice_kernel = Array(Array(4.274215e-05, 4.262653e-05, 4.268613e-05), Array(2.470042e-01, 2.468241e-01, 2.468283e-01), Array(7.876278e-02, 7.951456e-02, 7.994442e-02), Array(7.298247e-01, 7.299071e-01, 7.298656e-01), Array(5.481924e-04, 5.545520e-04, 5.553793e-04), Array(8.047482e-01, 8.052374e-01, 8.053391e-01), Array(8.425013e-01, 8.426091e-01, 8.426326e-01), Array(9.997944e-01, 9.998052e-01, 9.998033e-01)), shape = Array(2, 2, 2), tp = "hypercube", units = 3)(v21)
    val v22 = Materialize(v22_)
    val (v23) = tf.Transpose(axes = Array(1, 0))(v22)
    val (v24) = tf.GatherV2(axis = 0, indices = Array(0))(v23)
    val (v25) = tf.GatherV2(axis = 0, indices = Array(1))(v23)
    val (v26) = tf.GatherV2(axis = 0, indices = Array(2))(v23)
    val (v27) = tf.Transpose(axes = Array(1, 0))(v24)
    val (v28) = tf.Transpose(axes = Array(1, 0))(v25)
    val (v29) = tf.Transpose(axes = Array(1, 0))(v26)
    val (v30) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(6.296400e-04, 6.296400e-04, 6.296400e-04), Array(2.857146e-02, 2.857152e-02, 2.857171e-02), Array(3.072986e-02, 3.072895e-02, 3.072983e-02), Array(3.073038e-02, 3.073061e-02, 3.072976e-02), Array(3.178326e-02, 3.178383e-02, 3.178291e-02), Array(6.694540e-02, 6.694450e-02, 6.694507e-02), Array(3.953302e-02, 3.953376e-02, 3.953347e-02), Array(3.547420e-03, 3.547300e-03, 3.547210e-03), Array(2.768566e-02, 2.768563e-02, 2.768482e-02), Array(3.082812e-02, 3.082865e-02, 3.082913e-02), Array(3.869530e-03, 3.867860e-03, 3.868700e-03), Array(-3.986576e-02, -3.986517e-02, -3.986248e-02), Array(-3.132889e-02, -3.133032e-02, -3.132826e-02), Array(1.026937e-01, 1.026935e-01, 1.026926e-01), Array(1.396416e-01, 1.396443e-01, 1.396403e-01), Array(-3.035253e-02, -3.035179e-02, -3.035182e-02), Array(-9.731174e-02, -9.731445e-02, -9.731466e-02), Array(1.387743e-01, 1.387714e-01, 1.387731e-01), Array(5.564833e-02, 5.565089e-02, 5.564797e-02), Array(9.876790e-03, 9.876970e-03, 9.879170e-03), Array(6.363952e-02, 6.363690e-02, 6.363475e-02), Array(-4.196537e-02, -4.196560e-02, -4.196608e-02), Array(-3.535090e-03, -3.517690e-03, -3.546890e-03), Array(4.334037e-01, 4.334633e-01, 4.333765e-01), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v27)
    val (v31) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(8.804200e-04, 8.804000e-04, 8.803900e-04), Array(2.895175e-02, 2.895162e-02, 2.895162e-02), Array(3.104630e-02, 3.104518e-02, 3.104626e-02), Array(3.104378e-02, 3.104497e-02, 3.104383e-02), Array(3.104432e-02, 3.104362e-02, 3.104356e-02), Array(6.174426e-02, 6.174425e-02, 6.174453e-02), Array(3.470360e-02, 3.470443e-02, 3.470348e-02), Array(5.390930e-03, 5.390750e-03, 5.390600e-03), Array(2.805464e-02, 2.805193e-02, 2.805494e-02), Array(5.324379e-02, 5.324367e-02, 5.324283e-02), Array(6.352130e-03, 6.352190e-03, 6.353230e-03), Array(-3.641084e-02, -3.641191e-02, -3.641170e-02), Array(-1.464070e-03, -1.464720e-03, -1.464720e-03), Array(8.541387e-02, 8.541274e-02, 8.541507e-02), Array(1.409313e-01, 1.409319e-01, 1.409301e-01), Array(-1.582769e-02, -1.582870e-02, -1.582870e-02), Array(-9.232432e-02, -9.232685e-02, -9.232536e-02), Array(1.613620e-01, 1.613671e-01, 1.613622e-01), Array(6.383336e-02, 6.383431e-02, 6.383550e-02), Array(1.886123e-02, 1.886243e-02, 1.886100e-02), Array(1.762599e-02, 1.762682e-02, 1.762658e-02), Array(3.787899e-02, 3.787744e-02, 3.787637e-02), Array(6.673926e-02, 6.676185e-02, 6.672329e-02), Array(2.113454e-01, 2.313936e-01, 1.989266e-01), Array(2.339154e-02, 3.322900e-03, 3.225803e-02), Array(0.000000e+00, 0.000000e+00, 3.572820e-03), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v28)
    val (v32) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(9.264100e-04, 9.264100e-04, 9.264600e-04), Array(2.903821e-02, 2.903842e-02, 2.903837e-02), Array(3.111073e-02, 3.111144e-02, 3.111171e-02), Array(3.111222e-02, 3.111262e-02, 3.111220e-02), Array(3.111186e-02, 3.111260e-02, 3.111237e-02), Array(6.112742e-02, 6.112896e-02, 6.112786e-02), Array(3.796817e-02, 3.796805e-02, 3.796817e-02), Array(5.615990e-03, 5.616170e-03, 5.616860e-03), Array(2.479461e-02, 2.479523e-02, 2.479318e-02), Array(5.547556e-02, 5.547741e-02, 5.547616e-02), Array(6.523820e-03, 6.524090e-03, 6.522980e-03), Array(-3.626293e-02, -3.626326e-02, -3.626198e-02), Array(4.883100e-04, 4.888800e-04, 4.905200e-04), Array(8.283970e-02, 8.283782e-02, 8.283791e-02), Array(1.410650e-01, 1.410639e-01, 1.410635e-01), Array(-1.277611e-02, -1.277575e-02, -1.277515e-02), Array(-9.081253e-02, -9.081087e-02, -9.081176e-02), Array(1.583679e-01, 1.583651e-01, 1.583642e-01), Array(6.715560e-02, 6.715572e-02, 6.715518e-02), Array(2.032661e-02, 2.032781e-02, 2.032596e-02), Array(3.625990e-03, 3.625750e-03, 3.628020e-03), Array(6.513089e-02, 6.513333e-02, 6.513458e-02), Array(5.668700e-03, 5.687060e-03, 5.652840e-03), Array(2.669159e-01, 2.741115e-01, 2.511694e-01), Array(7.219430e-03, 0.000000e+00, 2.297789e-02), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00), Array(0.000000e+00, 0.000000e+00, 0.000000e+00)))(v29)
    val (v33) = tf.Stack(axis = 2)(v30, v31, v32)
    val (v34_) = tfl.Lattice(lattice_kernel = Array(Array(2.891134e-04, 2.891071e-04, 2.891149e-04), Array(3.059029e-01, 3.059023e-01, 3.059008e-01), Array(3.057253e-01, 3.057272e-01, 3.057271e-01), Array(7.146164e-01, 7.146158e-01, 7.146159e-01), Array(3.123229e-01, 3.123234e-01, 3.123227e-01), Array(7.220594e-01, 7.220582e-01, 7.220583e-01), Array(7.215280e-01, 7.215307e-01, 7.215293e-01), Array(9.998274e-01, 9.998274e-01, 9.998274e-01)), shape = Array(2, 2, 2), tp = "hypercube", units = 3)(v33)
    val v34 = Materialize(v34_)
    val (v35) = tfl.Linear(linear_layer_bias = -7.665792e-02, linear_layer_kernel = Array(Array(5.014023e-01), Array(5.994027e-01), Array(4.462241e-01)))(v34)
    val (v36) = tfl.PWLCalibration(input_keypoints = Array(0.000000e+00, 3.225806e-02, 6.451613e-02, 9.677419e-02, 1.290323e-01, 1.612903e-01, 1.935484e-01, 2.258064e-01, 2.580645e-01, 2.903226e-01, 3.225806e-01, 3.548387e-01, 3.870968e-01, 4.193548e-01, 4.516129e-01, 4.838710e-01, 5.161290e-01, 5.483871e-01, 5.806451e-01, 6.129032e-01, 6.451613e-01, 6.774194e-01, 7.096774e-01, 7.419355e-01, 7.741935e-01, 8.064516e-01, 8.387097e-01, 8.709677e-01, 9.032258e-01, 9.354839e-01, 9.677419e-01, 1.000000e+00), pwl_calibration_kernel = Array(Array(0.000000e+00), Array(0.000000e+00), Array(0.000000e+00), Array(0.000000e+00), Array(0.000000e+00), Array(2.115270e-03), Array(3.368160e-03), Array(4.338620e-03), Array(4.971100e-03), Array(5.731500e-03), Array(7.437120e-03), Array(1.706583e-01), Array(6.597205e-02), Array(5.145729e-02), Array(3.949058e-02), Array(4.448175e-02), Array(1.526120e-02), Array(6.465369e-02), Array(3.980908e-02), Array(6.894588e-02), Array(1.187313e-02), Array(4.140979e-02), Array(0.000000e+00), Array(2.103776e-02), Array(7.670009e-02), Array(3.488505e-02), Array(6.620896e-02), Array(1.933086e-02), Array(6.562477e-02), Array(2.711934e-02), Array(4.584974e-02), Array(1.268920e-03)))(v35)
    val (v37) = tf.Minimum(constant = 1.000000e+00)(v36)
    val (v38) = tf.Maximum(constant = 0.000000e+00)(v37)
    return (v38)
  }
}

@spatial object d3l3r3c32 extends SpatialApp {
  import spatial.dsl._
  type T = spatial.dsl.FixPt[TRUE, _6, _10]
  val dimensions = 9
  val iterations = 1
  def main(args: Array[String]) : Unit = {
    val input_DRAM = DRAM[T](dimensions, iterations)
    val output_DRAM = DRAM[T](iterations)

    Accel {
      val input_srams = scala.Range(0, 9) map {_ => SRAM[T](1, iterations)}
      input_srams.zipWithIndex map {
        case (x, i) => x load input_DRAM( i::i+1, 0::iterations)
      }

      val output_sram = SRAM[T](iterations)
      val result = d3l3r3c32_(input_srams(0), input_srams(1), input_srams(2), input_srams(3), input_srams(4), input_srams(5), input_srams(6), input_srams(7), input_srams(8))
      Pipe.Foreach(iterations by 1 par iterations) { i =>
        output_sram(i) = result(i, 0)()
      }

      output_DRAM store output_sram
    }
    println(getMem(output_DRAM))
  }
}

@spatial object d3l3r3c32_mat extends SpatialApp {
  import spatial.dsl._
  type T = spatial.dsl.FixPt[TRUE, _6, _10]
  val dimensions = 9
  val iterations = 1
  def main(args: Array[String]) : Unit = {
    val input_DRAM = DRAM[T](dimensions, iterations)
    val output_DRAM = DRAM[T](iterations)

    Accel {
      val input_srams = scala.Range(0, 9) map {_ => SRAM[T](1, iterations)}
      input_srams.zipWithIndex map {
        case (x, i) => x load input_DRAM( i::i+1, 0::iterations)
      }

      val output_sram = SRAM[T](iterations)
      val result = d3l3r3c32_mat_(input_srams(0), input_srams(1), input_srams(2), input_srams(3), input_srams(4), input_srams(5), input_srams(6), input_srams(7), input_srams(8))
      Pipe.Foreach(iterations by 1 par iterations) { i =>
        output_sram(i) = result(i, 0)()
      }

      output_DRAM store output_sram
    }
    println(getMem(output_DRAM))
  }
}

